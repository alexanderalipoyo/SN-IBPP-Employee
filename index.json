{
  "stats": {
    "suites": 8,
    "tests": 61,
    "passes": 61,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-25T10:37:40.987Z",
    "end": "2022-06-24T12:12:25.649Z",
    "duration": 1240573,
    "testsRegistered": 61,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "aec8e795-2ac4-4b38-ad73-ba0532686d4e",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\general.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\general.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d09917bd-fadc-48b8-b185-af087f23dc49",
          "title": "General - Employee",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Application Menu : Default items should visible",
              "fullTitle": "General - Employee Application Menu : Default items should visible",
              "timedOut": null,
              "duration": 11232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d55178e3-255c-44a8-a5c6-8bb843808885",
              "parentUUID": "d09917bd-fadc-48b8-b185-af087f23dc49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Application Menu : Check texts/labels if visible",
              "fullTitle": "General - Employee Application Menu : Check texts/labels if visible",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "86ce6c91-799f-4d8b-8821-fccbb98f681c",
              "parentUUID": "d09917bd-fadc-48b8-b185-af087f23dc49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Application Menu : Validate favorite application",
              "fullTitle": "General - Employee Application Menu : Validate favorite application",
              "timedOut": null,
              "duration": 11706,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "995c676e-47a1-4647-a58f-f03fc3776fb8",
              "parentUUID": "d09917bd-fadc-48b8-b185-af087f23dc49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Default items and fields should visible",
              "fullTitle": "General - Employee My Profile : Default items and fields should visible",
              "timedOut": null,
              "duration": 1802,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f4ca8300-1022-4df5-a6b1-ab158fbebe39",
              "parentUUID": "d09917bd-fadc-48b8-b185-af087f23dc49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Check texts/labels if visible",
              "fullTitle": "General - Employee My Profile : Check texts/labels if visible",
              "timedOut": null,
              "duration": 1146,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a61e3261-6388-4208-8f44-85cd6c9f6d50",
              "parentUUID": "d09917bd-fadc-48b8-b185-af087f23dc49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Update Basic Information",
              "fullTitle": "General - Employee My Profile : Update Basic Information",
              "timedOut": null,
              "duration": 5855,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d92d2b82-2a27-4015-89e0-3855344cd91d",
              "parentUUID": "d09917bd-fadc-48b8-b185-af087f23dc49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Display warning modal to disable weekly training and monthly newsletter emails",
              "fullTitle": "General - Employee My Profile : Display warning modal to disable weekly training and monthly newsletter emails",
              "timedOut": null,
              "duration": 2776,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3bcc2542-20b3-4e3b-a7a6-1a4bef95efc5",
              "parentUUID": "d09917bd-fadc-48b8-b185-af087f23dc49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Invalidate update button with empty mandatory fields",
              "fullTitle": "General - Employee My Profile (NEGATIVE) : Invalidate update button with empty mandatory fields",
              "timedOut": null,
              "duration": 1392,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dcbb916e-7942-48ff-82bd-a83f6cc0fa54",
              "parentUUID": "d09917bd-fadc-48b8-b185-af087f23dc49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Password and verify password fields does not match",
              "fullTitle": "General - Employee My Profile (NEGATIVE) : Password and verify password fields does not match",
              "timedOut": null,
              "duration": 3574,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a0948e68-ae4b-4861-87bd-c7b412e27857",
              "parentUUID": "d09917bd-fadc-48b8-b185-af087f23dc49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Enter a screen name that has special characters",
              "fullTitle": "General - Employee My Profile (NEGATIVE) : Enter a screen name that has special characters",
              "timedOut": null,
              "duration": 2540,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "284bc406-5276-4d50-9f72-b6486bbbe8dc",
              "parentUUID": "d09917bd-fadc-48b8-b185-af087f23dc49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (EDGE CASE) : Add alphabet and special character on phone number",
              "fullTitle": "General - Employee My Profile (EDGE CASE) : Add alphabet and special character on phone number",
              "timedOut": null,
              "duration": 835,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "15279f77-ed0b-4fb1-bb91-e91d57d857bc",
              "parentUUID": "d09917bd-fadc-48b8-b185-af087f23dc49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (EDGE CASE) : Add alphabet and special character on mobile number",
              "fullTitle": "General - Employee My Profile (EDGE CASE) : Add alphabet and special character on mobile number",
              "timedOut": null,
              "duration": 882,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5881a674-a15a-4be6-b8f8-e5f64796a32d",
              "parentUUID": "d09917bd-fadc-48b8-b185-af087f23dc49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (OOTB) : Able to change country code on phone number",
              "fullTitle": "General - Employee My Profile (OOTB) : Able to change country code on phone number",
              "timedOut": null,
              "duration": 4505,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9f1ba37c-7d8e-43cd-b95f-358686db6baf",
              "parentUUID": "d09917bd-fadc-48b8-b185-af087f23dc49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (OOTB) : Enter a screen name with spaces only",
              "fullTitle": "General - Employee My Profile (OOTB) : Enter a screen name with spaces only",
              "timedOut": null,
              "duration": 3210,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8b49e354-0fb3-413a-a2d9-439a86bc68c2",
              "parentUUID": "d09917bd-fadc-48b8-b185-af087f23dc49",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d55178e3-255c-44a8-a5c6-8bb843808885",
            "86ce6c91-799f-4d8b-8821-fccbb98f681c",
            "995c676e-47a1-4647-a58f-f03fc3776fb8",
            "f4ca8300-1022-4df5-a6b1-ab158fbebe39",
            "a61e3261-6388-4208-8f44-85cd6c9f6d50",
            "d92d2b82-2a27-4015-89e0-3855344cd91d",
            "3bcc2542-20b3-4e3b-a7a6-1a4bef95efc5",
            "dcbb916e-7942-48ff-82bd-a83f6cc0fa54",
            "a0948e68-ae4b-4861-87bd-c7b412e27857",
            "284bc406-5276-4d50-9f72-b6486bbbe8dc",
            "15279f77-ed0b-4fb1-bb91-e91d57d857bc",
            "5881a674-a15a-4be6-b8f8-e5f64796a32d",
            "9f1ba37c-7d8e-43cd-b95f-358686db6baf",
            "8b49e354-0fb3-413a-a2d9-439a86bc68c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 51592,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0e9db3cd-b90e-4ad2-9824-e40636a36a0b",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\partner-profile\\billing-report.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\partner-profile\\billing-report.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dc5ff90b-8118-4a21-bdda-a72f77adfcb9",
          "title": "PA Billing Report",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "PA Billing Report : Default items should visible",
              "fullTitle": "PA Billing Report PA Billing Report : Default items should visible",
              "timedOut": null,
              "duration": 10294,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "38cd41ab-542f-4214-932a-eb0b9d213628",
              "parentUUID": "dc5ff90b-8118-4a21-bdda-a72f77adfcb9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PA Billing Report : Check texts/labels if visible",
              "fullTitle": "PA Billing Report PA Billing Report : Check texts/labels if visible",
              "timedOut": null,
              "duration": 314,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "797877f3-f4f8-4bdf-904d-24af51598ad5",
              "parentUUID": "dc5ff90b-8118-4a21-bdda-a72f77adfcb9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PA Billing Report (EDGE) : Validate download Billing statement",
              "fullTitle": "PA Billing Report PA Billing Report (EDGE) : Validate download Billing statement",
              "timedOut": null,
              "duration": 10938,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ce0d743c-ee49-4feb-9590-d1ad359c5624",
              "parentUUID": "dc5ff90b-8118-4a21-bdda-a72f77adfcb9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PA Billing Report (EDGE) : Validate download XLS File",
              "fullTitle": "PA Billing Report PA Billing Report (EDGE) : Validate download XLS File",
              "timedOut": null,
              "duration": 2837,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ecd734ac-b28c-4f94-94a1-e7df9e882afc",
              "parentUUID": "dc5ff90b-8118-4a21-bdda-a72f77adfcb9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38cd41ab-542f-4214-932a-eb0b9d213628",
            "797877f3-f4f8-4bdf-904d-24af51598ad5",
            "ce0d743c-ee49-4feb-9590-d1ad359c5624",
            "ecd734ac-b28c-4f94-94a1-e7df9e882afc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24383,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "64c39121-9094-4832-9daf-3c6873319be2",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-dashboard.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-dashboard.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3b797992-43bc-4c34-8251-029fb1df7b6d",
          "title": "Employee - My Dashboard",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Company Average Employee Secure Score (ESS) : Default items should visible",
              "fullTitle": "Employee - My Dashboard Company Average Employee Secure Score (ESS) : Default items should visible",
              "timedOut": null,
              "duration": 14923,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ed66db6a-a362-4329-9ea0-149bb7d34805",
              "parentUUID": "3b797992-43bc-4c34-8251-029fb1df7b6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Company Average Employee Secure Score (ESS) : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard Company Average Employee Secure Score (ESS) : Check texts/labels if visible",
              "timedOut": null,
              "duration": 1303,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "603849fb-753f-4dd1-99a8-f4b3fb7c6794",
              "parentUUID": "3b797992-43bc-4c34-8251-029fb1df7b6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Company Average ESS Trend : Default items should visible",
              "fullTitle": "Employee - My Dashboard Company Average ESS Trend : Default items should visible",
              "timedOut": null,
              "duration": 4116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "efe65acc-b46a-4ca2-bec2-a1e98c06c7da",
              "parentUUID": "3b797992-43bc-4c34-8251-029fb1df7b6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Company Average ESS Trend : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard Company Average ESS Trend : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2020,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "71b6de7c-b2cd-4293-83f0-a858ea53f1d4",
              "parentUUID": "3b797992-43bc-4c34-8251-029fb1df7b6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Improve your ESS : Default items should visible",
              "fullTitle": "Employee - My Dashboard Improve your ESS : Default items should visible",
              "timedOut": null,
              "duration": 2215,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2ca79fbc-b290-413c-8d9e-d9a443525c31",
              "parentUUID": "3b797992-43bc-4c34-8251-029fb1df7b6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Improve your ESS : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard Improve your ESS : Check texts/labels if visible",
              "timedOut": null,
              "duration": 173,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "91867fce-efca-4649-9de2-6562e09e9d52",
              "parentUUID": "3b797992-43bc-4c34-8251-029fb1df7b6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "External Data Breaches : Default items should visible",
              "fullTitle": "Employee - My Dashboard External Data Breaches : Default items should visible",
              "timedOut": null,
              "duration": 2214,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "786186e0-bc73-4f9a-bde6-68c47c172b96",
              "parentUUID": "3b797992-43bc-4c34-8251-029fb1df7b6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "External Data Breaches : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard External Data Breaches : Check texts/labels if visible",
              "timedOut": null,
              "duration": 489,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "513e1c8d-9995-4c60-8584-94ee0be4dbc0",
              "parentUUID": "3b797992-43bc-4c34-8251-029fb1df7b6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Chart Bar : Default items should visible",
              "fullTitle": "Employee - My Dashboard Chart Bar : Default items should visible",
              "timedOut": null,
              "duration": 2231,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f91f78d3-5854-46ec-9568-b09dbbb238fa",
              "parentUUID": "3b797992-43bc-4c34-8251-029fb1df7b6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Chart Bar : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard Chart Bar : Check texts/labels if visible",
              "timedOut": null,
              "duration": 965,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5b7a2e93-91a3-4529-a693-4f1112604584",
              "parentUUID": "3b797992-43bc-4c34-8251-029fb1df7b6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaderboard : Default items should visible",
              "fullTitle": "Employee - My Dashboard Leaderboard : Default items should visible",
              "timedOut": null,
              "duration": 2235,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c11db798-23f0-4dca-839b-301796d68d38",
              "parentUUID": "3b797992-43bc-4c34-8251-029fb1df7b6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaderboard : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard Leaderboard : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2667,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "13a36735-167b-4e05-a6bf-b2827a689782",
              "parentUUID": "3b797992-43bc-4c34-8251-029fb1df7b6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ed66db6a-a362-4329-9ea0-149bb7d34805",
            "603849fb-753f-4dd1-99a8-f4b3fb7c6794",
            "efe65acc-b46a-4ca2-bec2-a1e98c06c7da",
            "71b6de7c-b2cd-4293-83f0-a858ea53f1d4",
            "2ca79fbc-b290-413c-8d9e-d9a443525c31",
            "91867fce-efca-4649-9de2-6562e09e9d52",
            "786186e0-bc73-4f9a-bde6-68c47c172b96",
            "513e1c8d-9995-4c60-8584-94ee0be4dbc0",
            "f91f78d3-5854-46ec-9568-b09dbbb238fa",
            "5b7a2e93-91a3-4529-a693-4f1112604584",
            "c11db798-23f0-4dca-839b-301796d68d38",
            "13a36735-167b-4e05-a6bf-b2827a689782"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35551,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "60412044-96ac-47e8-8f2d-729c44725a70",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-micro-training.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-micro-training.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eece5979-576c-47f8-82d4-c51801f1850e",
          "title": "Micro Training",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Micro Training : Default items should visible",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Default items should visible",
              "timedOut": null,
              "duration": 12088,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4eafdcb8-381a-41cd-a0db-fa5dbd20f12a",
              "parentUUID": "eece5979-576c-47f8-82d4-c51801f1850e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training : Check texts/labels if visible",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Check texts/labels if visible",
              "timedOut": null,
              "duration": 1481,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "83e084c4-fa3b-4714-a211-3e1fe2fd67e0",
              "parentUUID": "eece5979-576c-47f8-82d4-c51801f1850e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training : Validate All existing micro Trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Validate All existing micro Trainings",
              "timedOut": null,
              "duration": 89679,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f2e33bac-2a4b-492c-8446-ba2707aedbb8",
              "parentUUID": "eece5979-576c-47f8-82d4-c51801f1850e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (EDGE): Validate all unsubmitted answers on micro trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training (EDGE): Validate all unsubmitted answers on micro trainings",
              "timedOut": null,
              "duration": 653160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "71c5464f-df2b-4bb2-95bf-653c298c9d18",
              "parentUUID": "eece5979-576c-47f8-82d4-c51801f1850e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (EDGE) : Validate all answered on micro trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training (EDGE) : Validate all answered on micro trainings",
              "timedOut": null,
              "duration": 47195,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6083b28f-1206-4845-8374-26a757498593",
              "parentUUID": "eece5979-576c-47f8-82d4-c51801f1850e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (NEGATIVE) : Validate submission button and answers on submitted trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training (NEGATIVE) : Validate submission button and answers on submitted trainings",
              "timedOut": null,
              "duration": 5340,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "21e1146b-3364-4eff-b34b-e68fb9426421",
              "parentUUID": "eece5979-576c-47f8-82d4-c51801f1850e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (NEGATIVE) : Validate disable submit button if no answers",
              "fullTitle": "Micro Training My Dashboard - Micro Training (NEGATIVE) : Validate disable submit button if no answers",
              "timedOut": null,
              "duration": 6103,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ebba8355-2929-4f9d-89c2-67dcc3961d0b",
              "parentUUID": "eece5979-576c-47f8-82d4-c51801f1850e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training : Validate answer selections on unsubmitted micto trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Validate answer selections on unsubmitted micto trainings",
              "timedOut": null,
              "duration": 8491,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "80e83c99-ad00-40a9-b7c3-ee538bad8c9b",
              "parentUUID": "eece5979-576c-47f8-82d4-c51801f1850e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4eafdcb8-381a-41cd-a0db-fa5dbd20f12a",
            "83e084c4-fa3b-4714-a211-3e1fe2fd67e0",
            "f2e33bac-2a4b-492c-8446-ba2707aedbb8",
            "71c5464f-df2b-4bb2-95bf-653c298c9d18",
            "6083b28f-1206-4845-8374-26a757498593",
            "21e1146b-3364-4eff-b34b-e68fb9426421",
            "ebba8355-2929-4f9d-89c2-67dcc3961d0b",
            "80e83c99-ad00-40a9-b7c3-ee538bad8c9b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 823537,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d46ad3fc-d7a7-4b64-9d48-2ec57871fb07",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-newsletters.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-newsletters.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "861848e8-ebc6-459e-a735-7652ae614fe9",
          "title": "Newsletters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Newsletters : Default items should visible",
              "fullTitle": "Newsletters My Dashboard - Newsletters : Default items should visible",
              "timedOut": null,
              "duration": 18025,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9f6acd75-5631-4208-8b6d-0ea9b137a2df",
              "parentUUID": "861848e8-ebc6-459e-a735-7652ae614fe9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Newsletters : Check texts/labels if visible",
              "fullTitle": "Newsletters My Dashboard - Newsletters : Check texts/labels if visible",
              "timedOut": null,
              "duration": 75096,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "88433a49-14ed-4838-bf52-aa75d379daed",
              "parentUUID": "861848e8-ebc6-459e-a735-7652ae614fe9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Newsletters : Validate newsletters pdf reports",
              "fullTitle": "Newsletters My Dashboard - Newsletters : Validate newsletters pdf reports",
              "timedOut": null,
              "duration": 2354,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "41f4a361-f0a0-46d1-910a-fbfec2f24706",
              "parentUUID": "861848e8-ebc6-459e-a735-7652ae614fe9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9f6acd75-5631-4208-8b6d-0ea9b137a2df",
            "88433a49-14ed-4838-bf52-aa75d379daed",
            "41f4a361-f0a0-46d1-910a-fbfec2f24706"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 95475,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ac934775-3e17-4b3d-b053-e5145fd73149",
      "title": "",
      "fullFile": "cypress/integration/internal-bpp/employee/my-dashboard/employee-policies.feature",
      "file": "cypress/integration/internal-bpp/employee/my-dashboard/employee-policies.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1c47c2c4-e2d9-4dde-9d06-f772d4a51373",
          "title": "Policy & Procedure",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reset P & P : Default items should visible",
              "fullTitle": "Policy & Procedure Reset P & P : Default items should visible",
              "timedOut": null,
              "duration": 15331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ce0a7da7-5fab-409a-94c0-e26eef6c7444",
              "parentUUID": "1c47c2c4-e2d9-4dde-9d06-f772d4a51373",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reset P & P : Check texts/labels if visible",
              "fullTitle": "Policy & Procedure Reset P & P : Check texts/labels if visible",
              "timedOut": null,
              "duration": 547,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a835ba65-b14d-4c14-ad73-3d57430835ad",
              "parentUUID": "1c47c2c4-e2d9-4dde-9d06-f772d4a51373",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies : Acknowledge All policies",
              "fullTitle": "Policy & Procedure Dashboard Policies : Acknowledge All policies",
              "timedOut": null,
              "duration": 7126,
              "state": "passed",
              "speed": null,
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0d15f9f4-941c-483a-8ac4-549eb0d61059",
              "parentUUID": "1c47c2c4-e2d9-4dde-9d06-f772d4a51373",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies : Acknowledge All other policies",
              "fullTitle": "Policy & Procedure Dashboard Policies : Acknowledge All other policies",
              "timedOut": null,
              "duration": 9842,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "41529b5c-407d-4f76-82eb-73cbe6ac394d",
              "parentUUID": "1c47c2c4-e2d9-4dde-9d06-f772d4a51373",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (OOTB) : Validate API status when downloading all existing policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (OOTB) : Validate API status when downloading all existing policies",
              "timedOut": null,
              "duration": 13396,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0014f73a-1c66-4268-a4f0-d6ca76eed966",
              "parentUUID": "1c47c2c4-e2d9-4dde-9d06-f772d4a51373",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (OOTB) : Validate API status when downloading other policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (OOTB) : Validate API status when downloading other policies",
              "timedOut": null,
              "duration": 6638,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dc3ab879-ee96-4046-bb4c-52ef82b5aa8c",
              "parentUUID": "1c47c2c4-e2d9-4dde-9d06-f772d4a51373",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (NEGATIVE) : Hide created and modified date in other policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (NEGATIVE) : Hide created and modified date in other policies",
              "timedOut": null,
              "duration": 4535,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "10090307-fad7-4fc1-818b-5fb3283ba68e",
              "parentUUID": "1c47c2c4-e2d9-4dde-9d06-f772d4a51373",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (NEGATIVE) : Hide created and modified date in existing policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (NEGATIVE) : Hide created and modified date in existing policies",
              "timedOut": null,
              "duration": 9466,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4eadc68d-11b8-46b4-a040-a4c9fcd35ccc",
              "parentUUID": "1c47c2c4-e2d9-4dde-9d06-f772d4a51373",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (EDGE) : Validate existing policies via modal",
              "fullTitle": "Policy & Procedure Dashboard Policies (EDGE) : Validate existing policies via modal",
              "timedOut": null,
              "duration": 6211,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3bcde425-e1bf-4d1f-ae5f-b390f14d87d0",
              "parentUUID": "1c47c2c4-e2d9-4dde-9d06-f772d4a51373",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (EDGE) : Validate other policies via modal",
              "fullTitle": "Policy & Procedure Dashboard Policies (EDGE) : Validate other policies via modal",
              "timedOut": null,
              "duration": 7315,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "590ba239-0cc0-4cdd-b786-4a56af3ebcc1",
              "parentUUID": "1c47c2c4-e2d9-4dde-9d06-f772d4a51373",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce0a7da7-5fab-409a-94c0-e26eef6c7444",
            "a835ba65-b14d-4c14-ad73-3d57430835ad",
            "41529b5c-407d-4f76-82eb-73cbe6ac394d",
            "0014f73a-1c66-4268-a4f0-d6ca76eed966",
            "dc3ab879-ee96-4046-bb4c-52ef82b5aa8c",
            "10090307-fad7-4fc1-818b-5fb3283ba68e",
            "4eadc68d-11b8-46b4-a040-a4c9fcd35ccc",
            "3bcde425-e1bf-4d1f-ae5f-b390f14d87d0",
            "590ba239-0cc0-4cdd-b786-4a56af3ebcc1",
            "0d15f9f4-941c-483a-8ac4-549eb0d61059"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 130407,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5efda587-796a-4e38-97ad-f7c533502da6",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-training.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-training.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8d2c870e-c318-45c0-9d5f-d20e395c25fb",
          "title": "Training",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Training : Default items should visible",
              "fullTitle": "Training My Dashboard - Training : Default items should visible",
              "timedOut": null,
              "duration": 32361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8fb65153-049a-40ef-9cff-8fb439497b33",
              "parentUUID": "8d2c870e-c318-45c0-9d5f-d20e395c25fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training : Check texts/labels if visible",
              "fullTitle": "Training My Dashboard - Training : Check texts/labels if visible",
              "timedOut": null,
              "duration": 547,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "24e81d2f-da5b-434f-86c8-0cf7e57de03e",
              "parentUUID": "8d2c870e-c318-45c0-9d5f-d20e395c25fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training (EDGE) : Validate Security Quiz",
              "fullTitle": "Training My Dashboard - Training (EDGE) : Validate Security Quiz",
              "timedOut": null,
              "duration": 35466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "241a2561-2f14-465f-9150-f2eb49fc1457",
              "parentUUID": "8d2c870e-c318-45c0-9d5f-d20e395c25fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training (EDGE) : Validate Reviewing Security Quiz",
              "fullTitle": "Training My Dashboard - Training (EDGE) : Validate Reviewing Security Quiz",
              "timedOut": null,
              "duration": 3397,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e5f57cfe-92d2-4c86-8737-2c18e02c1978",
              "parentUUID": "8d2c870e-c318-45c0-9d5f-d20e395c25fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training : Validate Retaking Security Quiz",
              "fullTitle": "Training My Dashboard - Training : Validate Retaking Security Quiz",
              "timedOut": null,
              "duration": 3176,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "75bea775-083a-4964-a438-3644a16b6f28",
              "parentUUID": "8d2c870e-c318-45c0-9d5f-d20e395c25fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training : Validate Step 3 - Print Your Certificate",
              "fullTitle": "Training My Dashboard - Training : Validate Step 3 - Print Your Certificate",
              "timedOut": null,
              "duration": 5610,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "87bdf944-7c4a-44b2-a4c4-efbf17380143",
              "parentUUID": "8d2c870e-c318-45c0-9d5f-d20e395c25fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8fb65153-049a-40ef-9cff-8fb439497b33",
            "24e81d2f-da5b-434f-86c8-0cf7e57de03e",
            "241a2561-2f14-465f-9150-f2eb49fc1457",
            "e5f57cfe-92d2-4c86-8737-2c18e02c1978",
            "75bea775-083a-4964-a438-3644a16b6f28",
            "87bdf944-7c4a-44b2-a4c4-efbf17380143"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 80557,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9a8120c6-441b-4a49-beb8-b9b6bf0cee2e",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\contact.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\contact.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4a50ce13-ee14-4b21-a342-f437957face6",
          "title": "Contact Us - Employee",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Contact Us : Default items should visible",
              "fullTitle": "Contact Us - Employee Contact Us : Default items should visible",
              "timedOut": null,
              "duration": 33420,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c701fcbd-f682-406f-8a50-5a87bb7272bc",
              "parentUUID": "4a50ce13-ee14-4b21-a342-f437957face6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us : Check texts/labels if visible",
              "fullTitle": "Contact Us - Employee Contact Us : Check texts/labels if visible",
              "timedOut": null,
              "duration": 369,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f4509cd4-0993-43fb-8b79-7560c43a5e90",
              "parentUUID": "4a50ce13-ee14-4b21-a342-f437957face6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us : Validate cancel submission",
              "fullTitle": "Contact Us - Employee Contact Us : Validate cancel submission",
              "timedOut": null,
              "duration": 5112,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4bcb6dd9-83fe-4103-b850-eebef71b3bda",
              "parentUUID": "4a50ce13-ee14-4b21-a342-f437957face6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us (EDGE) : Validate contact-us submission",
              "fullTitle": "Contact Us - Employee Contact Us (EDGE) : Validate contact-us submission",
              "timedOut": null,
              "duration": 10170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ce9170dc-4125-4900-927c-6e82e5bfce87",
              "parentUUID": "4a50ce13-ee14-4b21-a342-f437957face6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c701fcbd-f682-406f-8a50-5a87bb7272bc",
            "f4509cd4-0993-43fb-8b79-7560c43a5e90",
            "4bcb6dd9-83fe-4103-b850-eebef71b3bda",
            "ce9170dc-4125-4900-927c-6e82e5bfce87"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 49071,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}