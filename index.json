{
  "stats": {
    "suites": 11,
    "tests": 102,
    "passes": 102,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-28T10:58:10.677Z",
    "end": "2022-09-28T11:14:37.524Z",
    "duration": 816815,
    "testsRegistered": 102,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a5dd4a18-21d5-4cbf-aeb5-d5b3274c980c",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\general.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\general.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
          "title": "General - Employee",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Application Menu : Default items should visible",
              "fullTitle": "General - Employee Application Menu : Default items should visible",
              "timedOut": null,
              "duration": 34741,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "360b327d-eacf-4d52-8244-979b7206c177",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Application Menu : Check texts/labels if visible",
              "fullTitle": "General - Employee Application Menu : Check texts/labels if visible",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c2cb39c3-f031-4826-865d-25756c8aa8e2",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Application Menu : Validate favorite application",
              "fullTitle": "General - Employee Application Menu : Validate favorite application",
              "timedOut": null,
              "duration": 16050,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8157cdde-f434-4d02-9045-8bde0c476e93",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Default items and fields should visible",
              "fullTitle": "General - Employee My Profile : Default items and fields should visible",
              "timedOut": null,
              "duration": 2045,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4493e3c2-ba86-4f78-a13c-06f9aec22501",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Check texts/labels if visible",
              "fullTitle": "General - Employee My Profile : Check texts/labels if visible",
              "timedOut": null,
              "duration": 673,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6612343e-54c4-4efd-8934-1b924bb8d3ed",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Update Basic Information",
              "fullTitle": "General - Employee My Profile : Update Basic Information",
              "timedOut": null,
              "duration": 7724,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "604e151c-cc03-4355-9863-925f706ad1f6",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Display warning modal to disable weekly training and monthly newsletter emails",
              "fullTitle": "General - Employee My Profile : Display warning modal to disable weekly training and monthly newsletter emails",
              "timedOut": null,
              "duration": 2532,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5ef99af8-5978-487b-809c-ea3719a5d859",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Invalidate update button with empty mandatory fields",
              "fullTitle": "General - Employee My Profile (NEGATIVE) : Invalidate update button with empty mandatory fields",
              "timedOut": null,
              "duration": 986,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "52919edf-4137-4a2e-9572-5c2d5d37c017",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Password and verify password fields does not match",
              "fullTitle": "General - Employee My Profile (NEGATIVE) : Password and verify password fields does not match",
              "timedOut": null,
              "duration": 2970,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "53122cea-f0b8-4c9f-ad68-e2015c73585b",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Enter a screen name that has special characters",
              "fullTitle": "General - Employee My Profile (NEGATIVE) : Enter a screen name that has special characters",
              "timedOut": null,
              "duration": 3262,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "41916e89-a998-4eb6-b447-e6e94d00444a",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (EDGE CASE) : Add alphabet and special character on phone number",
              "fullTitle": "General - Employee My Profile (EDGE CASE) : Add alphabet and special character on phone number",
              "timedOut": null,
              "duration": 528,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d21555a9-0d40-4cb4-8e82-b9bedc5f6ebc",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (EDGE CASE) : Add alphabet and special character on mobile number",
              "fullTitle": "General - Employee My Profile (EDGE CASE) : Add alphabet and special character on mobile number",
              "timedOut": null,
              "duration": 521,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f3411452-400b-4c9f-8fc8-fe1470a4eb9b",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (OOTB) : Able to change country code on phone number",
              "fullTitle": "General - Employee My Profile (OOTB) : Able to change country code on phone number",
              "timedOut": null,
              "duration": 3505,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d7951648-c847-4717-8c57-f0afd65b0cfd",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (OOTB) : Enter a screen name with spaces only",
              "fullTitle": "General - Employee My Profile (OOTB) : Enter a screen name with spaces only",
              "timedOut": null,
              "duration": 3326,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "750fdfd3-3896-46bc-a64b-c6b167d0de68",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Disable update button when mandatory fields are empty",
              "fullTitle": "General - Employee My Profile : Disable update button when mandatory fields are empty",
              "timedOut": null,
              "duration": 782,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6da42e7c-82c3-49f4-a8bf-b965005857a0",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - risk",
              "fullTitle": "General - Employee My Profile : Validate Password Strength - risk",
              "timedOut": null,
              "duration": 528,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8aecad20-e9fd-48ce-9455-22a723eef361",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - weak",
              "fullTitle": "General - Employee My Profile : Validate Password Strength - weak",
              "timedOut": null,
              "duration": 535,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "00f2e350-910e-44d0-9e19-be2bf825fe63",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - fair",
              "fullTitle": "General - Employee My Profile : Validate Password Strength - fair",
              "timedOut": null,
              "duration": 651,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d6fcf182-c959-4789-92aa-8ec60bda1d48",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - good",
              "fullTitle": "General - Employee My Profile : Validate Password Strength - good",
              "timedOut": null,
              "duration": 703,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "826d33bf-a744-49ea-a0b6-d506f2742729",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - strong",
              "fullTitle": "General - Employee My Profile : Validate Password Strength - strong",
              "timedOut": null,
              "duration": 1061,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "252168e4-8f82-4b1b-8950-b869bfcbdc57",
              "parentUUID": "e9d408d8-f1f2-4ea8-abc1-5306fe8be684",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "360b327d-eacf-4d52-8244-979b7206c177",
            "c2cb39c3-f031-4826-865d-25756c8aa8e2",
            "8157cdde-f434-4d02-9045-8bde0c476e93",
            "4493e3c2-ba86-4f78-a13c-06f9aec22501",
            "6612343e-54c4-4efd-8934-1b924bb8d3ed",
            "604e151c-cc03-4355-9863-925f706ad1f6",
            "5ef99af8-5978-487b-809c-ea3719a5d859",
            "52919edf-4137-4a2e-9572-5c2d5d37c017",
            "53122cea-f0b8-4c9f-ad68-e2015c73585b",
            "41916e89-a998-4eb6-b447-e6e94d00444a",
            "d21555a9-0d40-4cb4-8e82-b9bedc5f6ebc",
            "f3411452-400b-4c9f-8fc8-fe1470a4eb9b",
            "d7951648-c847-4717-8c57-f0afd65b0cfd",
            "750fdfd3-3896-46bc-a64b-c6b167d0de68",
            "6da42e7c-82c3-49f4-a8bf-b965005857a0",
            "8aecad20-e9fd-48ce-9455-22a723eef361",
            "00f2e350-910e-44d0-9e19-be2bf825fe63",
            "d6fcf182-c959-4789-92aa-8ec60bda1d48",
            "826d33bf-a744-49ea-a0b6-d506f2742729",
            "252168e4-8f82-4b1b-8950-b869bfcbdc57"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 83246,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "842e495b-fcb4-47ea-9412-af0dc51c5fa8",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\newsfeed.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\newsfeed.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "893742d4-4423-4175-a176-1112de9a82c0",
          "title": "Newsfeed - Employee",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Newsfeed : Default items should visible",
              "fullTitle": "Newsfeed - Employee Newsfeed : Default items should visible",
              "timedOut": null,
              "duration": 32070,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fa0e236f-dff9-4a19-a2eb-72960e304586",
              "parentUUID": "893742d4-4423-4175-a176-1112de9a82c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Check texts/labels if visible",
              "fullTitle": "Newsfeed - Employee Newsfeed : Check texts/labels if visible",
              "timedOut": null,
              "duration": 237,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7039a9f5-047a-4506-856f-2764d480f947",
              "parentUUID": "893742d4-4423-4175-a176-1112de9a82c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Notifications",
              "fullTitle": "Newsfeed - Employee Newsfeed : Validate Notifications",
              "timedOut": null,
              "duration": 2707,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9c30084b-c0dd-4748-be02-911fcda89f61",
              "parentUUID": "893742d4-4423-4175-a176-1112de9a82c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Advanced Filters",
              "fullTitle": "Newsfeed - Employee Newsfeed : Validate Advanced Filters",
              "timedOut": null,
              "duration": 12237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f70b2f3f-c29f-46d4-823c-bee14308d028",
              "parentUUID": "893742d4-4423-4175-a176-1112de9a82c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Sortings",
              "fullTitle": "Newsfeed - Employee Newsfeed : Validate Sortings",
              "timedOut": null,
              "duration": 7577,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fe39c7ff-8568-41a1-8c73-121629a4f89a",
              "parentUUID": "893742d4-4423-4175-a176-1112de9a82c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Search by Hasthag",
              "fullTitle": "Newsfeed - Employee Newsfeed : Validate Search by Hasthag",
              "timedOut": null,
              "duration": 982,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "57cf5382-4d00-40f7-a2b2-8e20e63b53e2",
              "parentUUID": "893742d4-4423-4175-a176-1112de9a82c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Search by Users",
              "fullTitle": "Newsfeed - Employee Newsfeed : Validate Search by Users",
              "timedOut": null,
              "duration": 981,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "daba31b4-4b7f-4bbc-b45d-f513a10fc63e",
              "parentUUID": "893742d4-4423-4175-a176-1112de9a82c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed (NEGATIVE) : Validate MA/M/E (non-internal bpp) does not have authorized to publish a post",
              "fullTitle": "Newsfeed - Employee Newsfeed (NEGATIVE) : Validate MA/M/E (non-internal bpp) does not have authorized to publish a post",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f6dbe8ef-0364-4948-beb7-f2618e6d2b1f",
              "parentUUID": "893742d4-4423-4175-a176-1112de9a82c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed (EDGE) : Validate Press \"ENTER\" key on keyboard on Newsfeed Screen",
              "fullTitle": "Newsfeed - Employee Newsfeed (EDGE) : Validate Press \"ENTER\" key on keyboard on Newsfeed Screen",
              "timedOut": null,
              "duration": 332,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "56cd9a28-00b0-4311-835d-eef0f3d25374",
              "parentUUID": "893742d4-4423-4175-a176-1112de9a82c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed (NEGATIVE) : Validate search on non existing user",
              "fullTitle": "Newsfeed - Employee Newsfeed (NEGATIVE) : Validate search on non existing user",
              "timedOut": null,
              "duration": 2683,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cbf4322e-0da9-4d1a-b5f6-bf74f75583b9",
              "parentUUID": "893742d4-4423-4175-a176-1112de9a82c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed (NEGATIVE) : Validate search on non existing hashtags",
              "fullTitle": "Newsfeed - Employee Newsfeed (NEGATIVE) : Validate search on non existing hashtags",
              "timedOut": null,
              "duration": 2614,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ecd2d7eb-37a6-4466-8853-f542084011b7",
              "parentUUID": "893742d4-4423-4175-a176-1112de9a82c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fa0e236f-dff9-4a19-a2eb-72960e304586",
            "7039a9f5-047a-4506-856f-2764d480f947",
            "9c30084b-c0dd-4748-be02-911fcda89f61",
            "f70b2f3f-c29f-46d4-823c-bee14308d028",
            "fe39c7ff-8568-41a1-8c73-121629a4f89a",
            "57cf5382-4d00-40f7-a2b2-8e20e63b53e2",
            "daba31b4-4b7f-4bbc-b45d-f513a10fc63e",
            "f6dbe8ef-0364-4948-beb7-f2618e6d2b1f",
            "56cd9a28-00b0-4311-835d-eef0f3d25374",
            "cbf4322e-0da9-4d1a-b5f6-bf74f75583b9",
            "ecd2d7eb-37a6-4466-8853-f542084011b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 62568,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4381f45d-3d24-40d5-b7b6-98e6282c9b49",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\reg-codes.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\reg-codes.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0c953ac3-4be2-48c1-801c-bdccf9d47e22",
          "title": "Add New Employees - Registration codes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Default items should visible",
              "fullTitle": "Add New Employees - Registration codes Default items should visible",
              "timedOut": null,
              "duration": 2613,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d149d0a9-e6ac-4ce6-999c-a7945d19ee4c",
              "parentUUID": "0c953ac3-4be2-48c1-801c-bdccf9d47e22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate successful new user account creation",
              "fullTitle": "Add New Employees - Registration codes Validate successful new user account creation",
              "timedOut": null,
              "duration": 8885,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1f568290-ef4f-4227-9d30-1d22cc7f6099",
              "parentUUID": "0c953ac3-4be2-48c1-801c-bdccf9d47e22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate existing user",
              "fullTitle": "Add New Employees - Registration codes Validate existing user",
              "timedOut": null,
              "duration": 8541,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4dc285df-4781-47b1-9007-6365b9cdaab6",
              "parentUUID": "0c953ac3-4be2-48c1-801c-bdccf9d47e22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate cancel adding new user",
              "fullTitle": "Add New Employees - Registration codes Validate cancel adding new user",
              "timedOut": null,
              "duration": 2141,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f6bf5d8b-26dc-42f0-961f-72b4c8d39e1d",
              "parentUUID": "0c953ac3-4be2-48c1-801c-bdccf9d47e22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check field validations",
              "fullTitle": "Add New Employees - Registration codes Check field validations",
              "timedOut": null,
              "duration": 3506,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9f668710-03a7-429c-ab63-9ebc9720d885",
              "parentUUID": "0c953ac3-4be2-48c1-801c-bdccf9d47e22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate matching email and confirm email fields",
              "fullTitle": "Add New Employees - Registration codes Validate matching email and confirm email fields",
              "timedOut": null,
              "duration": 7085,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2e1de88c-66b2-4088-8179-aef9c9e06397",
              "parentUUID": "0c953ac3-4be2-48c1-801c-bdccf9d47e22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate matching password and verify password fields",
              "fullTitle": "Add New Employees - Registration codes Create account : Validate matching password and verify password fields",
              "timedOut": null,
              "duration": 7748,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e2fffa78-4168-4b86-9e56-a890de1a2561",
              "parentUUID": "0c953ac3-4be2-48c1-801c-bdccf9d47e22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate Password Strength - risk",
              "fullTitle": "Add New Employees - Registration codes Create account : Validate Password Strength - risk",
              "timedOut": null,
              "duration": 2414,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a0f56a26-bee1-4705-bf05-383050599ba9",
              "parentUUID": "0c953ac3-4be2-48c1-801c-bdccf9d47e22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate Password Strength - weak",
              "fullTitle": "Add New Employees - Registration codes Create account : Validate Password Strength - weak",
              "timedOut": null,
              "duration": 2328,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "aeeb7731-602c-4124-bad9-53a39d687efc",
              "parentUUID": "0c953ac3-4be2-48c1-801c-bdccf9d47e22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate Password Strength - fair",
              "fullTitle": "Add New Employees - Registration codes Create account : Validate Password Strength - fair",
              "timedOut": null,
              "duration": 2166,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "13694c49-9b1d-4829-ad78-0604885a950c",
              "parentUUID": "0c953ac3-4be2-48c1-801c-bdccf9d47e22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate Password Strength - good",
              "fullTitle": "Add New Employees - Registration codes Create account : Validate Password Strength - good",
              "timedOut": null,
              "duration": 2101,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7244844c-7167-4a01-a1bb-634e6a273f1a",
              "parentUUID": "0c953ac3-4be2-48c1-801c-bdccf9d47e22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate Password Strength - strong",
              "fullTitle": "Add New Employees - Registration codes Create account : Validate Password Strength - strong",
              "timedOut": null,
              "duration": 2173,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1f576235-812e-4d94-99cc-1a490fbdd513",
              "parentUUID": "0c953ac3-4be2-48c1-801c-bdccf9d47e22",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d149d0a9-e6ac-4ce6-999c-a7945d19ee4c",
            "1f568290-ef4f-4227-9d30-1d22cc7f6099",
            "4dc285df-4781-47b1-9007-6365b9cdaab6",
            "f6bf5d8b-26dc-42f0-961f-72b4c8d39e1d",
            "9f668710-03a7-429c-ab63-9ebc9720d885",
            "2e1de88c-66b2-4088-8179-aef9c9e06397",
            "e2fffa78-4168-4b86-9e56-a890de1a2561",
            "a0f56a26-bee1-4705-bf05-383050599ba9",
            "aeeb7731-602c-4124-bad9-53a39d687efc",
            "13694c49-9b1d-4829-ad78-0604885a950c",
            "7244844c-7167-4a01-a1bb-634e6a273f1a",
            "1f576235-812e-4d94-99cc-1a490fbdd513"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 51701,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "48674e2f-941e-4b35-ae73-fb62a08df11c",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-dark-web.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-dark-web.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "49a6bde5-dedc-4c49-82f9-460e28d961ba",
          "title": "Dark Web - Run DWBA",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Dark Web : Default items should visible",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Default items should visible",
              "timedOut": null,
              "duration": 34131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5c3ff8cf-3418-4578-8f28-b350c7e7f796",
              "parentUUID": "49a6bde5-dedc-4c49-82f9-460e28d961ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web : Check texts/labels if visible",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Check texts/labels if visible",
              "timedOut": null,
              "duration": 409,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b635d520-c4f4-40da-ac02-9ef2b2cc2b9b",
              "parentUUID": "49a6bde5-dedc-4c49-82f9-460e28d961ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web : Validate check emails associated with any external data breaches",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Validate check emails associated with any external data breaches",
              "timedOut": null,
              "duration": 6288,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "de66ad5f-6c2a-4937-b68b-19689d91374e",
              "parentUUID": "49a6bde5-dedc-4c49-82f9-460e28d961ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web : Validate check emails not associated with any external data breaches",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Validate check emails not associated with any external data breaches",
              "timedOut": null,
              "duration": 1917,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6c9cfa83-4b46-4f3f-bd56-163a04d54b91",
              "parentUUID": "49a6bde5-dedc-4c49-82f9-460e28d961ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (NEGATIVE) : Invalidate checking with empty email address field",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (NEGATIVE) : Invalidate checking with empty email address field",
              "timedOut": null,
              "duration": 503,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0351d2a7-e8cc-49ed-b550-f06a280bae11",
              "parentUUID": "49a6bde5-dedc-4c49-82f9-460e28d961ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (NEGATIVE) : Invalidate check email with invalid email format",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (NEGATIVE) : Invalidate check email with invalid email format",
              "timedOut": null,
              "duration": 936,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2a1074a6-45c3-4630-999d-7fd59c684cad",
              "parentUUID": "49a6bde5-dedc-4c49-82f9-460e28d961ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (NEGATIVE) : Validate table results after updating or clearing email address field",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (NEGATIVE) : Validate table results after updating or clearing email address field",
              "timedOut": null,
              "duration": 7118,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "41ed6b31-7899-4f3d-969d-4bbde7c610a3",
              "parentUUID": "49a6bde5-dedc-4c49-82f9-460e28d961ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (OOTB) : Reset table results after page refresh",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (OOTB) : Reset table results after page refresh",
              "timedOut": null,
              "duration": 3626,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d96ac0d2-45f3-4fc9-b55d-e3a9e2a3f78b",
              "parentUUID": "49a6bde5-dedc-4c49-82f9-460e28d961ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (OOTB) : Validate API results when generating results",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (OOTB) : Validate API results when generating results",
              "timedOut": null,
              "duration": 2835,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6574d2c9-d582-4976-b3e1-a3a77b2748ef",
              "parentUUID": "49a6bde5-dedc-4c49-82f9-460e28d961ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (EDGE) : Validate column sorting",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (EDGE) : Validate column sorting",
              "timedOut": null,
              "duration": 6646,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1f5faee4-5900-45e3-8bba-444419038a65",
              "parentUUID": "49a6bde5-dedc-4c49-82f9-460e28d961ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (EDGE) : Validate return results on Compromised Data",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (EDGE) : Validate return results on Compromised Data",
              "timedOut": null,
              "duration": 296,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2b13fc5d-85f5-4689-aa66-95f2c2ba5f17",
              "parentUUID": "49a6bde5-dedc-4c49-82f9-460e28d961ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c3ff8cf-3418-4578-8f28-b350c7e7f796",
            "b635d520-c4f4-40da-ac02-9ef2b2cc2b9b",
            "de66ad5f-6c2a-4937-b68b-19689d91374e",
            "6c9cfa83-4b46-4f3f-bd56-163a04d54b91",
            "0351d2a7-e8cc-49ed-b550-f06a280bae11",
            "2a1074a6-45c3-4630-999d-7fd59c684cad",
            "41ed6b31-7899-4f3d-969d-4bbde7c610a3",
            "d96ac0d2-45f3-4fc9-b55d-e3a9e2a3f78b",
            "6574d2c9-d582-4976-b3e1-a3a77b2748ef",
            "1f5faee4-5900-45e3-8bba-444419038a65",
            "2b13fc5d-85f5-4689-aa66-95f2c2ba5f17"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 64705,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3dec53d3-e1c9-41e1-aceb-a31468da7b63",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-dashboard.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-dashboard.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "882fad51-ba6b-4bbf-ac97-e6c6876f9c95",
          "title": "Employee - My Dashboard",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Company Average Employee Secure Score (ESS) : Default items should visible",
              "fullTitle": "Employee - My Dashboard Company Average Employee Secure Score (ESS) : Default items should visible",
              "timedOut": null,
              "duration": 30692,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c81f6c25-7207-4f73-8f7e-d0649de0399d",
              "parentUUID": "882fad51-ba6b-4bbf-ac97-e6c6876f9c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Company Average Employee Secure Score (ESS) : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard Company Average Employee Secure Score (ESS) : Check texts/labels if visible",
              "timedOut": null,
              "duration": 614,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "163afdbd-0586-4f9e-9089-d91070855059",
              "parentUUID": "882fad51-ba6b-4bbf-ac97-e6c6876f9c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Company Average ESS Trend : Default items should visible",
              "fullTitle": "Employee - My Dashboard Company Average ESS Trend : Default items should visible",
              "timedOut": null,
              "duration": 2487,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7baa6033-5a32-4b1a-be46-03b2fd89e218",
              "parentUUID": "882fad51-ba6b-4bbf-ac97-e6c6876f9c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Company Average ESS Trend : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard Company Average ESS Trend : Check texts/labels if visible",
              "timedOut": null,
              "duration": 1252,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "01956e04-e1bb-41d8-8f66-fdd0416c7f86",
              "parentUUID": "882fad51-ba6b-4bbf-ac97-e6c6876f9c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Improve your ESS : Default items should visible",
              "fullTitle": "Employee - My Dashboard Improve your ESS : Default items should visible",
              "timedOut": null,
              "duration": 1508,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "efc9e95a-8bef-4ce0-8375-f7ca8e6ee9c1",
              "parentUUID": "882fad51-ba6b-4bbf-ac97-e6c6876f9c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Improve your ESS : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard Improve your ESS : Check texts/labels if visible",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c4368dac-253b-428c-a42a-4ab3e15b74ae",
              "parentUUID": "882fad51-ba6b-4bbf-ac97-e6c6876f9c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "External Data Breaches : Default items should visible",
              "fullTitle": "Employee - My Dashboard External Data Breaches : Default items should visible",
              "timedOut": null,
              "duration": 1416,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "77c020b2-2bb7-427d-a74e-bd34eca4ee88",
              "parentUUID": "882fad51-ba6b-4bbf-ac97-e6c6876f9c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "External Data Breaches : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard External Data Breaches : Check texts/labels if visible",
              "timedOut": null,
              "duration": 225,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5506c231-4393-42ac-a391-84d36ecc3de3",
              "parentUUID": "882fad51-ba6b-4bbf-ac97-e6c6876f9c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Chart Bar : Default items should visible",
              "fullTitle": "Employee - My Dashboard Chart Bar : Default items should visible",
              "timedOut": null,
              "duration": 1193,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fd1ce018-ad5a-4e1f-843a-21f731ce2aa0",
              "parentUUID": "882fad51-ba6b-4bbf-ac97-e6c6876f9c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Chart Bar : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard Chart Bar : Check texts/labels if visible",
              "timedOut": null,
              "duration": 414,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5992f8e0-6876-4996-98c1-c5b494a12f50",
              "parentUUID": "882fad51-ba6b-4bbf-ac97-e6c6876f9c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaderboard : Default items should visible",
              "fullTitle": "Employee - My Dashboard Leaderboard : Default items should visible",
              "timedOut": null,
              "duration": 1271,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dc2322dc-8eb7-4099-9652-a7ce3837f07a",
              "parentUUID": "882fad51-ba6b-4bbf-ac97-e6c6876f9c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaderboard : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard Leaderboard : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2621,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "98f04f0e-d95a-45a4-829b-8723065acd09",
              "parentUUID": "882fad51-ba6b-4bbf-ac97-e6c6876f9c95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c81f6c25-7207-4f73-8f7e-d0649de0399d",
            "163afdbd-0586-4f9e-9089-d91070855059",
            "7baa6033-5a32-4b1a-be46-03b2fd89e218",
            "01956e04-e1bb-41d8-8f66-fdd0416c7f86",
            "efc9e95a-8bef-4ce0-8375-f7ca8e6ee9c1",
            "c4368dac-253b-428c-a42a-4ab3e15b74ae",
            "77c020b2-2bb7-427d-a74e-bd34eca4ee88",
            "5506c231-4393-42ac-a391-84d36ecc3de3",
            "fd1ce018-ad5a-4e1f-843a-21f731ce2aa0",
            "5992f8e0-6876-4996-98c1-c5b494a12f50",
            "dc2322dc-8eb7-4099-9652-a7ce3837f07a",
            "98f04f0e-d95a-45a4-829b-8723065acd09"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 43834,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0b5f96e6-9910-45cd-b04c-79b55243bbd0",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-micro-training.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-micro-training.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c42de414-a151-42ce-b1cc-e0fff4fe8752",
          "title": "Micro Training",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Micro Training : Default items should visible",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Default items should visible",
              "timedOut": null,
              "duration": 31183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "836d3705-f7e6-4b24-afda-520323edf8ab",
              "parentUUID": "c42de414-a151-42ce-b1cc-e0fff4fe8752",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training : Check texts/labels if visible",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Check texts/labels if visible",
              "timedOut": null,
              "duration": 791,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3fcc7bfd-04b7-482d-82de-2a1e198a232b",
              "parentUUID": "c42de414-a151-42ce-b1cc-e0fff4fe8752",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training : Validate All existing micro Trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Validate All existing micro Trainings",
              "timedOut": null,
              "duration": 35584,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b954ae47-8813-4c99-aa4c-ed67d82433b3",
              "parentUUID": "c42de414-a151-42ce-b1cc-e0fff4fe8752",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (EDGE): Validate all unsubmitted answers on micro trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training (EDGE): Validate all unsubmitted answers on micro trainings",
              "timedOut": null,
              "duration": 33202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3a37c188-1af7-4872-8af7-e078488b373f",
              "parentUUID": "c42de414-a151-42ce-b1cc-e0fff4fe8752",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (EDGE) : Validate all answered on micro trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training (EDGE) : Validate all answered on micro trainings",
              "timedOut": null,
              "duration": 38873,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3de34377-7399-4e4d-a179-8cf42e0b1791",
              "parentUUID": "c42de414-a151-42ce-b1cc-e0fff4fe8752",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (NEGATIVE) : Validate submission button and answers on submitted trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training (NEGATIVE) : Validate submission button and answers on submitted trainings",
              "timedOut": null,
              "duration": 5731,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cefa57a5-b9fb-47d0-bee7-4758f25fde30",
              "parentUUID": "c42de414-a151-42ce-b1cc-e0fff4fe8752",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (NEGATIVE) : Validate disable submit button if no answers",
              "fullTitle": "Micro Training My Dashboard - Micro Training (NEGATIVE) : Validate disable submit button if no answers",
              "timedOut": null,
              "duration": 6995,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0e3a12ac-6db2-4e3a-a0e4-56c7137ec5f7",
              "parentUUID": "c42de414-a151-42ce-b1cc-e0fff4fe8752",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training : Validate answer selections on unsubmitted micto trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Validate answer selections on unsubmitted micto trainings",
              "timedOut": null,
              "duration": 6394,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "907cba77-5c00-437e-b10d-47f556c1aa25",
              "parentUUID": "c42de414-a151-42ce-b1cc-e0fff4fe8752",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "836d3705-f7e6-4b24-afda-520323edf8ab",
            "3fcc7bfd-04b7-482d-82de-2a1e198a232b",
            "b954ae47-8813-4c99-aa4c-ed67d82433b3",
            "3a37c188-1af7-4872-8af7-e078488b373f",
            "3de34377-7399-4e4d-a179-8cf42e0b1791",
            "cefa57a5-b9fb-47d0-bee7-4758f25fde30",
            "0e3a12ac-6db2-4e3a-a0e4-56c7137ec5f7",
            "907cba77-5c00-437e-b10d-47f556c1aa25"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 158753,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f2b90d1e-373e-4b64-8d32-d7372e26d564",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-newsletters.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-newsletters.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "702e6153-3bed-40e5-bd4d-ae8e134a68f9",
          "title": "Newsletters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Newsletters : Default items should visible",
              "fullTitle": "Newsletters My Dashboard - Newsletters : Default items should visible",
              "timedOut": null,
              "duration": 36773,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "283bdd24-ee35-49ae-9a7f-b104923276d3",
              "parentUUID": "702e6153-3bed-40e5-bd4d-ae8e134a68f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Newsletters : Check texts/labels if visible",
              "fullTitle": "Newsletters My Dashboard - Newsletters : Check texts/labels if visible",
              "timedOut": null,
              "duration": 33775,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "de4b37da-f2b3-4a21-931d-983b3a786870",
              "parentUUID": "702e6153-3bed-40e5-bd4d-ae8e134a68f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Newsletters : Validate newsletters pdf reports",
              "fullTitle": "Newsletters My Dashboard - Newsletters : Validate newsletters pdf reports",
              "timedOut": null,
              "duration": 4538,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6a99094f-86ca-4e14-aae1-0f6cfc49f728",
              "parentUUID": "702e6153-3bed-40e5-bd4d-ae8e134a68f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "283bdd24-ee35-49ae-9a7f-b104923276d3",
            "de4b37da-f2b3-4a21-931d-983b3a786870",
            "6a99094f-86ca-4e14-aae1-0f6cfc49f728"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 75086,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4d39fe48-4006-460b-b4ee-c102ca1b6f82",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-policies.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-policies.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bf8037e6-4250-4a0a-bff0-176ad86cd205",
          "title": "Policy & Procedure",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reset P & P : Default items should visible",
              "fullTitle": "Policy & Procedure Reset P & P : Default items should visible",
              "timedOut": null,
              "duration": 37553,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9c04f582-2862-456a-a788-c674fc1b5506",
              "parentUUID": "bf8037e6-4250-4a0a-bff0-176ad86cd205",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reset P & P : Check texts/labels if visible",
              "fullTitle": "Policy & Procedure Reset P & P : Check texts/labels if visible",
              "timedOut": null,
              "duration": 512,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b44367dc-3f1e-4290-99ce-b9a99fbb3503",
              "parentUUID": "bf8037e6-4250-4a0a-bff0-176ad86cd205",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies : Acknowledge All policies",
              "fullTitle": "Policy & Procedure Dashboard Policies : Acknowledge All policies",
              "timedOut": null,
              "duration": 17466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "871d089a-ba0e-46dd-80ad-eb4d9d7768c3",
              "parentUUID": "bf8037e6-4250-4a0a-bff0-176ad86cd205",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies : Acknowledge All other policies",
              "fullTitle": "Policy & Procedure Dashboard Policies : Acknowledge All other policies",
              "timedOut": null,
              "duration": 8009,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "63da6f59-92a0-4baf-9da5-07ef92fb638d",
              "parentUUID": "bf8037e6-4250-4a0a-bff0-176ad86cd205",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (OOTB) : Validate API status when downloading all existing policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (OOTB) : Validate API status when downloading all existing policies",
              "timedOut": null,
              "duration": 2733,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fdaa75db-7fd8-45d2-9e83-8570c42677bf",
              "parentUUID": "bf8037e6-4250-4a0a-bff0-176ad86cd205",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (OOTB) : Validate API status when downloading other policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (OOTB) : Validate API status when downloading other policies",
              "timedOut": null,
              "duration": 2753,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "12f4a41b-1318-484d-b150-b12b97a445c8",
              "parentUUID": "bf8037e6-4250-4a0a-bff0-176ad86cd205",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (NEGATIVE) : Hide created and modified date in other policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (NEGATIVE) : Hide created and modified date in other policies",
              "timedOut": null,
              "duration": 6947,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "51fd72b6-7fcb-498c-bc60-6f14c4442607",
              "parentUUID": "bf8037e6-4250-4a0a-bff0-176ad86cd205",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (NEGATIVE) : Hide created and modified date in existing policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (NEGATIVE) : Hide created and modified date in existing policies",
              "timedOut": null,
              "duration": 2379,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7bc450d1-d049-40ba-a1a2-8b0917f80134",
              "parentUUID": "bf8037e6-4250-4a0a-bff0-176ad86cd205",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (EDGE) : Validate existing policies via modal",
              "fullTitle": "Policy & Procedure Dashboard Policies (EDGE) : Validate existing policies via modal",
              "timedOut": null,
              "duration": 5459,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "de16105d-fbec-4549-8279-8163e888a928",
              "parentUUID": "bf8037e6-4250-4a0a-bff0-176ad86cd205",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (EDGE) : Validate other policies via modal",
              "fullTitle": "Policy & Procedure Dashboard Policies (EDGE) : Validate other policies via modal",
              "timedOut": null,
              "duration": 6603,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "85e4eda7-7a20-40d7-944c-848e5dd58390",
              "parentUUID": "bf8037e6-4250-4a0a-bff0-176ad86cd205",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c04f582-2862-456a-a788-c674fc1b5506",
            "b44367dc-3f1e-4290-99ce-b9a99fbb3503",
            "871d089a-ba0e-46dd-80ad-eb4d9d7768c3",
            "63da6f59-92a0-4baf-9da5-07ef92fb638d",
            "fdaa75db-7fd8-45d2-9e83-8570c42677bf",
            "12f4a41b-1318-484d-b150-b12b97a445c8",
            "51fd72b6-7fcb-498c-bc60-6f14c4442607",
            "7bc450d1-d049-40ba-a1a2-8b0917f80134",
            "de16105d-fbec-4549-8279-8163e888a928",
            "85e4eda7-7a20-40d7-944c-848e5dd58390"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 90414,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "25579e9c-6d45-4a48-8f2a-576dbbb34e1a",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-training.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-training.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6651883a-f572-40cc-b705-3d3f9cd6ada0",
          "title": "Training",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Training : Default items should visible",
              "fullTitle": "Training My Dashboard - Training : Default items should visible",
              "timedOut": null,
              "duration": 33487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cc5ad664-b0d5-4b59-8e10-4b3f17f3e83f",
              "parentUUID": "6651883a-f572-40cc-b705-3d3f9cd6ada0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training : Check texts/labels if visible",
              "fullTitle": "Training My Dashboard - Training : Check texts/labels if visible",
              "timedOut": null,
              "duration": 312,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f6eecdd9-3de8-4d4f-8750-f1b9768681c4",
              "parentUUID": "6651883a-f572-40cc-b705-3d3f9cd6ada0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training : Validate Cybersecurity Training Videos",
              "fullTitle": "Training My Dashboard - Training : Validate Cybersecurity Training Videos",
              "timedOut": null,
              "duration": 26249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3fdc3846-063e-46b1-93ca-422059a8f34b",
              "parentUUID": "6651883a-f572-40cc-b705-3d3f9cd6ada0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training (EDGE) : Validate Security Quiz",
              "fullTitle": "Training My Dashboard - Training (EDGE) : Validate Security Quiz",
              "timedOut": null,
              "duration": 24266,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "43b9c53f-27b6-4071-9717-f424bebd4e6d",
              "parentUUID": "6651883a-f572-40cc-b705-3d3f9cd6ada0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training (EDGE) : Validate Reviewing Security Quiz",
              "fullTitle": "Training My Dashboard - Training (EDGE) : Validate Reviewing Security Quiz",
              "timedOut": null,
              "duration": 3460,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "40bd3fdf-e368-4f06-aef6-4290a0a92d15",
              "parentUUID": "6651883a-f572-40cc-b705-3d3f9cd6ada0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training : Validate Retaking Security Quiz",
              "fullTitle": "Training My Dashboard - Training : Validate Retaking Security Quiz",
              "timedOut": null,
              "duration": 6567,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6d7e041d-3234-4744-b189-eedc336ecc53",
              "parentUUID": "6651883a-f572-40cc-b705-3d3f9cd6ada0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training : Validate Step 3 - Print Your Certificate",
              "fullTitle": "Training My Dashboard - Training : Validate Step 3 - Print Your Certificate",
              "timedOut": null,
              "duration": 5805,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8210d1ee-feb9-4082-8cb2-422f91d1284f",
              "parentUUID": "6651883a-f572-40cc-b705-3d3f9cd6ada0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc5ad664-b0d5-4b59-8e10-4b3f17f3e83f",
            "f6eecdd9-3de8-4d4f-8750-f1b9768681c4",
            "3fdc3846-063e-46b1-93ca-422059a8f34b",
            "43b9c53f-27b6-4071-9717-f424bebd4e6d",
            "40bd3fdf-e368-4f06-aef6-4290a0a92d15",
            "6d7e041d-3234-4744-b189-eedc336ecc53",
            "8210d1ee-feb9-4082-8cb2-422f91d1284f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 100146,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "68b7a8c7-f3af-466c-8113-b4fde42ce442",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\partner-profile\\billing-report.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\partner-profile\\billing-report.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d9dc6472-dd69-4c38-94e2-d85072ffef54",
          "title": "PA Billing Report",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "PA Billing Report : Default items should visible",
              "fullTitle": "PA Billing Report PA Billing Report : Default items should visible",
              "timedOut": null,
              "duration": 32434,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9a15c9b5-fc89-4842-8df4-aa979b2c89f1",
              "parentUUID": "d9dc6472-dd69-4c38-94e2-d85072ffef54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PA Billing Report : Check texts/labels if visible",
              "fullTitle": "PA Billing Report PA Billing Report : Check texts/labels if visible",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6aa92e95-378d-4cee-9a90-48bb5b3a45df",
              "parentUUID": "d9dc6472-dd69-4c38-94e2-d85072ffef54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PA Billing Report (EDGE) : Validate download Billing statement",
              "fullTitle": "PA Billing Report PA Billing Report (EDGE) : Validate download Billing statement",
              "timedOut": null,
              "duration": 11487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "598ccb13-41f5-449b-8c8d-dc5cff149041",
              "parentUUID": "d9dc6472-dd69-4c38-94e2-d85072ffef54",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PA Billing Report (EDGE) : Validate download XLS File",
              "fullTitle": "PA Billing Report PA Billing Report (EDGE) : Validate download XLS File",
              "timedOut": null,
              "duration": 3303,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "22b17ed3-abc4-4dcf-8501-399f87f4f9d8",
              "parentUUID": "d9dc6472-dd69-4c38-94e2-d85072ffef54",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9a15c9b5-fc89-4842-8df4-aa979b2c89f1",
            "6aa92e95-378d-4cee-9a90-48bb5b3a45df",
            "598ccb13-41f5-449b-8c8d-dc5cff149041",
            "22b17ed3-abc4-4dcf-8501-399f87f4f9d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 47425,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d7c4a805-2c21-4284-8d62-c57457b27bcd",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\contact.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\contact.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5558f2d3-3853-4f05-85e1-68af543d9dd2",
          "title": "Contact Us - Employee",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Contact Us : Default items should visible",
              "fullTitle": "Contact Us - Employee Contact Us : Default items should visible",
              "timedOut": null,
              "duration": 33078,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "57597590-e8c1-4b2d-bb7b-f6e28b7a4276",
              "parentUUID": "5558f2d3-3853-4f05-85e1-68af543d9dd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us : Check texts/labels if visible",
              "fullTitle": "Contact Us - Employee Contact Us : Check texts/labels if visible",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "63a1f432-0ea6-49df-9e8e-41e10c746fee",
              "parentUUID": "5558f2d3-3853-4f05-85e1-68af543d9dd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us : Validate cancel submission",
              "fullTitle": "Contact Us - Employee Contact Us : Validate cancel submission",
              "timedOut": null,
              "duration": 1816,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e1c561be-25ea-4d54-9f27-b876b937122e",
              "parentUUID": "5558f2d3-3853-4f05-85e1-68af543d9dd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us (EDGE) : Validate contact-us submission",
              "fullTitle": "Contact Us - Employee Contact Us (EDGE) : Validate contact-us submission",
              "timedOut": null,
              "duration": 3905,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "13891dc4-fefa-4002-925d-c5a06deb8662",
              "parentUUID": "5558f2d3-3853-4f05-85e1-68af543d9dd2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "57597590-e8c1-4b2d-bb7b-f6e28b7a4276",
            "63a1f432-0ea6-49df-9e8e-41e10c746fee",
            "e1c561be-25ea-4d54-9f27-b876b937122e",
            "13891dc4-fefa-4002-925d-c5a06deb8662"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 38937,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}