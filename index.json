{
  "stats": {
    "suites": 11,
    "tests": 101,
    "passes": 101,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-09T12:18:33.038Z",
    "end": "2023-03-09T12:35:46.704Z",
    "duration": 860972,
    "testsRegistered": 101,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3415aa48-da7a-4fbb-a788-d58db90c5456",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\general.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\general.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9564529c-e423-4175-9b65-9035aebd0c95",
          "title": "General - Employee",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Application Menu : Default items should visible",
              "fullTitle": "General - Employee Application Menu : Default items should visible",
              "timedOut": null,
              "duration": 36063,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6532419b-b335-462b-9156-cbaa9b91cfa0",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Application Menu : Check texts/labels if visible",
              "fullTitle": "General - Employee Application Menu : Check texts/labels if visible",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "388c2ef3-9786-4eb7-82d2-b4123d03dbc8",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Application Menu : Validate favorite application",
              "fullTitle": "General - Employee Application Menu : Validate favorite application",
              "timedOut": null,
              "duration": 15815,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "05c8c411-f701-49f4-8ab0-24bed607b5cc",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Default items and fields should visible",
              "fullTitle": "General - Employee My Profile : Default items and fields should visible",
              "timedOut": null,
              "duration": 2135,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d6a8e39b-150b-41ad-b7a7-ad3e2b5d3234",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Check texts/labels if visible",
              "fullTitle": "General - Employee My Profile : Check texts/labels if visible",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "312a4345-ff28-4b69-8acc-6169d413b289",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Update Basic Information",
              "fullTitle": "General - Employee My Profile : Update Basic Information",
              "timedOut": null,
              "duration": 7983,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e15273a1-f31e-4750-81bf-65e3fe2f278e",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Invalidate update button with empty mandatory fields",
              "fullTitle": "General - Employee My Profile (NEGATIVE) : Invalidate update button with empty mandatory fields",
              "timedOut": null,
              "duration": 5391,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "aea37a22-24a3-4f6e-a836-b9eca8aba77b",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Password and verify password fields does not match",
              "fullTitle": "General - Employee My Profile (NEGATIVE) : Password and verify password fields does not match",
              "timedOut": null,
              "duration": 6110,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4eaac6e4-882b-4ad5-b0af-6528fe34d3e9",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (NEGATIVE) : Enter a screen name that has special characters",
              "fullTitle": "General - Employee My Profile (NEGATIVE) : Enter a screen name that has special characters",
              "timedOut": null,
              "duration": 2670,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "45ffe3fb-5c4d-4d79-908e-f91ddc8f9679",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (EDGE CASE) : Add alphabet and special character on phone number",
              "fullTitle": "General - Employee My Profile (EDGE CASE) : Add alphabet and special character on phone number",
              "timedOut": null,
              "duration": 582,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bd00bd21-c50e-45fd-8534-f4d44c4305ff",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (EDGE CASE) : Add alphabet and special character on mobile number",
              "fullTitle": "General - Employee My Profile (EDGE CASE) : Add alphabet and special character on mobile number",
              "timedOut": null,
              "duration": 532,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f45f4f2f-6028-44eb-89d3-47a42f775fa3",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (OOTB) : Able to change country code on phone number",
              "fullTitle": "General - Employee My Profile (OOTB) : Able to change country code on phone number",
              "timedOut": null,
              "duration": 4019,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f1bfb412-5fc3-4d60-b741-18ea34463b5f",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile (OOTB) : Enter a screen name with spaces only",
              "fullTitle": "General - Employee My Profile (OOTB) : Enter a screen name with spaces only",
              "timedOut": null,
              "duration": 3227,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7d95a61d-a132-4930-be5d-c5bade4ba476",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Disable update button when mandatory fields are empty",
              "fullTitle": "General - Employee My Profile : Disable update button when mandatory fields are empty",
              "timedOut": null,
              "duration": 520,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7a3bbcdf-e999-4357-bfb9-8c29e0d409fc",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - risk",
              "fullTitle": "General - Employee My Profile : Validate Password Strength - risk",
              "timedOut": null,
              "duration": 514,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0ee2d0f0-ddb2-46f1-995c-e0f97ec108f4",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - weak",
              "fullTitle": "General - Employee My Profile : Validate Password Strength - weak",
              "timedOut": null,
              "duration": 497,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "eede1a6b-2e3e-49d0-bcae-ed906efcf007",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - fair",
              "fullTitle": "General - Employee My Profile : Validate Password Strength - fair",
              "timedOut": null,
              "duration": 709,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c0dcd6c7-96e8-48fe-89cd-d3aff43a077a",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - good",
              "fullTitle": "General - Employee My Profile : Validate Password Strength - good",
              "timedOut": null,
              "duration": 725,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e8826cb1-3ae8-4033-b4c3-9e4501b17ffc",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Profile : Validate Password Strength - strong",
              "fullTitle": "General - Employee My Profile : Validate Password Strength - strong",
              "timedOut": null,
              "duration": 926,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "66868cdc-750a-4ac3-aef1-dd0c9225048a",
              "parentUUID": "9564529c-e423-4175-9b65-9035aebd0c95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6532419b-b335-462b-9156-cbaa9b91cfa0",
            "388c2ef3-9786-4eb7-82d2-b4123d03dbc8",
            "05c8c411-f701-49f4-8ab0-24bed607b5cc",
            "d6a8e39b-150b-41ad-b7a7-ad3e2b5d3234",
            "312a4345-ff28-4b69-8acc-6169d413b289",
            "e15273a1-f31e-4750-81bf-65e3fe2f278e",
            "aea37a22-24a3-4f6e-a836-b9eca8aba77b",
            "4eaac6e4-882b-4ad5-b0af-6528fe34d3e9",
            "45ffe3fb-5c4d-4d79-908e-f91ddc8f9679",
            "bd00bd21-c50e-45fd-8534-f4d44c4305ff",
            "f45f4f2f-6028-44eb-89d3-47a42f775fa3",
            "f1bfb412-5fc3-4d60-b741-18ea34463b5f",
            "7d95a61d-a132-4930-be5d-c5bade4ba476",
            "7a3bbcdf-e999-4357-bfb9-8c29e0d409fc",
            "0ee2d0f0-ddb2-46f1-995c-e0f97ec108f4",
            "eede1a6b-2e3e-49d0-bcae-ed906efcf007",
            "c0dcd6c7-96e8-48fe-89cd-d3aff43a077a",
            "e8826cb1-3ae8-4033-b4c3-9e4501b17ffc",
            "66868cdc-750a-4ac3-aef1-dd0c9225048a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 88677,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9cf54be1-79e3-49e1-9865-bd1427df6657",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\newsfeed.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\newsfeed.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "06320b80-3ed7-4b31-994b-6ecb81f5972a",
          "title": "Newsfeed - Employee",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Newsfeed : Default items should visible",
              "fullTitle": "Newsfeed - Employee Newsfeed : Default items should visible",
              "timedOut": null,
              "duration": 34006,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ef65e471-7e9a-4ad2-be13-1db7339ec2e6",
              "parentUUID": "06320b80-3ed7-4b31-994b-6ecb81f5972a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Check texts/labels if visible",
              "fullTitle": "Newsfeed - Employee Newsfeed : Check texts/labels if visible",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8c923aac-004c-4a8e-a990-aa4684601883",
              "parentUUID": "06320b80-3ed7-4b31-994b-6ecb81f5972a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Notifications",
              "fullTitle": "Newsfeed - Employee Newsfeed : Validate Notifications",
              "timedOut": null,
              "duration": 2356,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c91e8bce-ee6a-4ed7-b131-76dc06f6f8cf",
              "parentUUID": "06320b80-3ed7-4b31-994b-6ecb81f5972a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Advanced Filters",
              "fullTitle": "Newsfeed - Employee Newsfeed : Validate Advanced Filters",
              "timedOut": null,
              "duration": 9624,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f0f611d9-cf9c-465f-bcb1-245b36cf24e4",
              "parentUUID": "06320b80-3ed7-4b31-994b-6ecb81f5972a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Sortings",
              "fullTitle": "Newsfeed - Employee Newsfeed : Validate Sortings",
              "timedOut": null,
              "duration": 7057,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "417ea189-a695-45e5-9e20-4ca8ca41b631",
              "parentUUID": "06320b80-3ed7-4b31-994b-6ecb81f5972a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Search by Hasthag",
              "fullTitle": "Newsfeed - Employee Newsfeed : Validate Search by Hasthag",
              "timedOut": null,
              "duration": 1016,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a30cf83f-951d-4979-9571-86bf57061393",
              "parentUUID": "06320b80-3ed7-4b31-994b-6ecb81f5972a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed : Validate Search by Users",
              "fullTitle": "Newsfeed - Employee Newsfeed : Validate Search by Users",
              "timedOut": null,
              "duration": 1134,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d7908f81-e723-4ddb-a49c-fc95868a427c",
              "parentUUID": "06320b80-3ed7-4b31-994b-6ecb81f5972a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed (NEGATIVE) : Validate MA/M/E (non-internal bpp) does not have authorized to publish a post",
              "fullTitle": "Newsfeed - Employee Newsfeed (NEGATIVE) : Validate MA/M/E (non-internal bpp) does not have authorized to publish a post",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "020bd2b3-3339-454d-9843-fdda4b881774",
              "parentUUID": "06320b80-3ed7-4b31-994b-6ecb81f5972a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed (EDGE) : Validate Press \"ENTER\" key on keyboard on Newsfeed Screen",
              "fullTitle": "Newsfeed - Employee Newsfeed (EDGE) : Validate Press \"ENTER\" key on keyboard on Newsfeed Screen",
              "timedOut": null,
              "duration": 308,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ac1bf885-5532-406e-b589-c3f1280809d5",
              "parentUUID": "06320b80-3ed7-4b31-994b-6ecb81f5972a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed (NEGATIVE) : Validate search on non existing user",
              "fullTitle": "Newsfeed - Employee Newsfeed (NEGATIVE) : Validate search on non existing user",
              "timedOut": null,
              "duration": 2783,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "95a2798c-9cf2-4534-b81c-6a3c49df27ae",
              "parentUUID": "06320b80-3ed7-4b31-994b-6ecb81f5972a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Newsfeed (NEGATIVE) : Validate search on non existing hashtags",
              "fullTitle": "Newsfeed - Employee Newsfeed (NEGATIVE) : Validate search on non existing hashtags",
              "timedOut": null,
              "duration": 2706,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "33b8d638-cfdb-472b-9144-c26034cd4abc",
              "parentUUID": "06320b80-3ed7-4b31-994b-6ecb81f5972a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef65e471-7e9a-4ad2-be13-1db7339ec2e6",
            "8c923aac-004c-4a8e-a990-aa4684601883",
            "c91e8bce-ee6a-4ed7-b131-76dc06f6f8cf",
            "f0f611d9-cf9c-465f-bcb1-245b36cf24e4",
            "417ea189-a695-45e5-9e20-4ca8ca41b631",
            "a30cf83f-951d-4979-9571-86bf57061393",
            "d7908f81-e723-4ddb-a49c-fc95868a427c",
            "020bd2b3-3339-454d-9843-fdda4b881774",
            "ac1bf885-5532-406e-b589-c3f1280809d5",
            "95a2798c-9cf2-4534-b81c-6a3c49df27ae",
            "33b8d638-cfdb-472b-9144-c26034cd4abc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 61215,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "599e56f5-37d7-43f4-971a-bfb51674e6b0",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\reg-codes.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\reg-codes.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f1b86cc4-1d43-4894-ab5b-bf2a95ec2052",
          "title": "Add New Employees - Registration codes",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Default items should visible",
              "fullTitle": "Add New Employees - Registration codes Default items should visible",
              "timedOut": null,
              "duration": 3393,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e1d9e17f-c5c1-4237-a834-b184d2c06f3b",
              "parentUUID": "f1b86cc4-1d43-4894-ab5b-bf2a95ec2052",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate successful new user account creation",
              "fullTitle": "Add New Employees - Registration codes Validate successful new user account creation",
              "timedOut": null,
              "duration": 10649,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a3c31006-669a-4ed6-83bd-4b77cf5dc91f",
              "parentUUID": "f1b86cc4-1d43-4894-ab5b-bf2a95ec2052",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate existing user",
              "fullTitle": "Add New Employees - Registration codes Validate existing user",
              "timedOut": null,
              "duration": 9028,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "11a72da8-8ee8-48af-b511-826f03713370",
              "parentUUID": "f1b86cc4-1d43-4894-ab5b-bf2a95ec2052",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate cancel adding new user",
              "fullTitle": "Add New Employees - Registration codes Validate cancel adding new user",
              "timedOut": null,
              "duration": 2491,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e4581097-6708-4641-ae20-930274ad7e65",
              "parentUUID": "f1b86cc4-1d43-4894-ab5b-bf2a95ec2052",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check field validations",
              "fullTitle": "Add New Employees - Registration codes Check field validations",
              "timedOut": null,
              "duration": 3913,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0e52ff09-068b-4dd5-9202-5eb979738f32",
              "parentUUID": "f1b86cc4-1d43-4894-ab5b-bf2a95ec2052",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate matching email and confirm email fields",
              "fullTitle": "Add New Employees - Registration codes Validate matching email and confirm email fields",
              "timedOut": null,
              "duration": 8933,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8aa09fa2-0236-412f-9ccc-86d449d3add4",
              "parentUUID": "f1b86cc4-1d43-4894-ab5b-bf2a95ec2052",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate matching password and verify password fields",
              "fullTitle": "Add New Employees - Registration codes Create account : Validate matching password and verify password fields",
              "timedOut": null,
              "duration": 16532,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8899f08b-8941-43fa-b330-9fe8aa276eb8",
              "parentUUID": "f1b86cc4-1d43-4894-ab5b-bf2a95ec2052",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate Password Strength - risk",
              "fullTitle": "Add New Employees - Registration codes Create account : Validate Password Strength - risk",
              "timedOut": null,
              "duration": 2337,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "998538f7-3590-41fc-ae0b-1cd678e6684d",
              "parentUUID": "f1b86cc4-1d43-4894-ab5b-bf2a95ec2052",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate Password Strength - weak",
              "fullTitle": "Add New Employees - Registration codes Create account : Validate Password Strength - weak",
              "timedOut": null,
              "duration": 2368,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "85c447f9-2b6a-4438-a0d8-1a3263701387",
              "parentUUID": "f1b86cc4-1d43-4894-ab5b-bf2a95ec2052",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate Password Strength - fair",
              "fullTitle": "Add New Employees - Registration codes Create account : Validate Password Strength - fair",
              "timedOut": null,
              "duration": 2431,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "890b39ec-0182-4829-8ad4-84bce5dbacf9",
              "parentUUID": "f1b86cc4-1d43-4894-ab5b-bf2a95ec2052",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate Password Strength - good",
              "fullTitle": "Add New Employees - Registration codes Create account : Validate Password Strength - good",
              "timedOut": null,
              "duration": 2397,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7ec37822-61fb-44d8-8148-01ff06680a60",
              "parentUUID": "f1b86cc4-1d43-4894-ab5b-bf2a95ec2052",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create account : Validate Password Strength - strong",
              "fullTitle": "Add New Employees - Registration codes Create account : Validate Password Strength - strong",
              "timedOut": null,
              "duration": 2757,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "84884f0c-09ae-48e1-922d-97fd6b1b474f",
              "parentUUID": "f1b86cc4-1d43-4894-ab5b-bf2a95ec2052",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1d9e17f-c5c1-4237-a834-b184d2c06f3b",
            "a3c31006-669a-4ed6-83bd-4b77cf5dc91f",
            "11a72da8-8ee8-48af-b511-826f03713370",
            "e4581097-6708-4641-ae20-930274ad7e65",
            "0e52ff09-068b-4dd5-9202-5eb979738f32",
            "8aa09fa2-0236-412f-9ccc-86d449d3add4",
            "8899f08b-8941-43fa-b330-9fe8aa276eb8",
            "998538f7-3590-41fc-ae0b-1cd678e6684d",
            "85c447f9-2b6a-4438-a0d8-1a3263701387",
            "890b39ec-0182-4829-8ad4-84bce5dbacf9",
            "7ec37822-61fb-44d8-8148-01ff06680a60",
            "84884f0c-09ae-48e1-922d-97fd6b1b474f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 67229,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "951b5173-7a55-4055-879a-55f4bcd79dd6",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-dark-web.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-dark-web.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "409ceb38-8af2-4931-bb83-7a5f86b9c0fb",
          "title": "Dark Web - Run DWBA",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Dark Web : Default items should visible",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Default items should visible",
              "timedOut": null,
              "duration": 35117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2298657d-c127-4e22-a0e3-54a5339b32d9",
              "parentUUID": "409ceb38-8af2-4931-bb83-7a5f86b9c0fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web : Check texts/labels if visible",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Check texts/labels if visible",
              "timedOut": null,
              "duration": 285,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dd3d38e6-4c81-485f-90b1-b401cf52efe3",
              "parentUUID": "409ceb38-8af2-4931-bb83-7a5f86b9c0fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web : Validate check emails associated with any external data breaches",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Validate check emails associated with any external data breaches",
              "timedOut": null,
              "duration": 5622,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9982b387-59a9-4027-a633-8d56de6e0edd",
              "parentUUID": "409ceb38-8af2-4931-bb83-7a5f86b9c0fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web : Validate check emails not associated with any external data breaches",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web : Validate check emails not associated with any external data breaches",
              "timedOut": null,
              "duration": 2842,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "284202e9-ce9a-4cd8-b7b7-8639478cb771",
              "parentUUID": "409ceb38-8af2-4931-bb83-7a5f86b9c0fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (NEGATIVE) : Invalidate checking with empty email address field",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (NEGATIVE) : Invalidate checking with empty email address field",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cd1da7d0-eb72-43d8-b76a-dfcb94331dda",
              "parentUUID": "409ceb38-8af2-4931-bb83-7a5f86b9c0fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (NEGATIVE) : Invalidate check email with invalid email format",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (NEGATIVE) : Invalidate check email with invalid email format",
              "timedOut": null,
              "duration": 811,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c8b436bd-d32a-44d3-abc0-96cbe6f3f2aa",
              "parentUUID": "409ceb38-8af2-4931-bb83-7a5f86b9c0fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (NEGATIVE) : Validate table results after updating or clearing email address field",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (NEGATIVE) : Validate table results after updating or clearing email address field",
              "timedOut": null,
              "duration": 7323,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8f609f87-72fc-4ab2-b207-5485e0d9c534",
              "parentUUID": "409ceb38-8af2-4931-bb83-7a5f86b9c0fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (OOTB) : Reset table results after page refresh",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (OOTB) : Reset table results after page refresh",
              "timedOut": null,
              "duration": 3620,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "525ad3ed-16d0-4eac-9463-bac334242f03",
              "parentUUID": "409ceb38-8af2-4931-bb83-7a5f86b9c0fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (OOTB) : Validate API results when generating results",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (OOTB) : Validate API results when generating results",
              "timedOut": null,
              "duration": 4734,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "debd458a-bc1a-405a-954b-4590ddb0cbe7",
              "parentUUID": "409ceb38-8af2-4931-bb83-7a5f86b9c0fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (EDGE) : Validate column sorting",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (EDGE) : Validate column sorting",
              "timedOut": null,
              "duration": 9387,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0973d31d-d47c-40f1-b34d-638146832d64",
              "parentUUID": "409ceb38-8af2-4931-bb83-7a5f86b9c0fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Dark Web (EDGE) : Validate return results on Compromised Data",
              "fullTitle": "Dark Web - Run DWBA My Dashboard - Dark Web (EDGE) : Validate return results on Compromised Data",
              "timedOut": null,
              "duration": 287,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "262fd36a-9ea9-44fc-aba9-f279324508c2",
              "parentUUID": "409ceb38-8af2-4931-bb83-7a5f86b9c0fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2298657d-c127-4e22-a0e3-54a5339b32d9",
            "dd3d38e6-4c81-485f-90b1-b401cf52efe3",
            "9982b387-59a9-4027-a633-8d56de6e0edd",
            "284202e9-ce9a-4cd8-b7b7-8639478cb771",
            "cd1da7d0-eb72-43d8-b76a-dfcb94331dda",
            "c8b436bd-d32a-44d3-abc0-96cbe6f3f2aa",
            "8f609f87-72fc-4ab2-b207-5485e0d9c534",
            "525ad3ed-16d0-4eac-9463-bac334242f03",
            "debd458a-bc1a-405a-954b-4590ddb0cbe7",
            "0973d31d-d47c-40f1-b34d-638146832d64",
            "262fd36a-9ea9-44fc-aba9-f279324508c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 70285,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "122c4293-e420-4ce7-a10c-cd51edd8b4e1",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-dashboard.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-dashboard.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "14a1e5c9-2fc6-40a5-9f9c-a50486f43831",
          "title": "Employee - My Dashboard",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Company Average Employee Secure Score (ESS) : Default items should visible",
              "fullTitle": "Employee - My Dashboard Company Average Employee Secure Score (ESS) : Default items should visible",
              "timedOut": null,
              "duration": 32053,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5122521d-892c-4ab7-8704-add3e75fda57",
              "parentUUID": "14a1e5c9-2fc6-40a5-9f9c-a50486f43831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Company Average Employee Secure Score (ESS) : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard Company Average Employee Secure Score (ESS) : Check texts/labels if visible",
              "timedOut": null,
              "duration": 552,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4853e6f9-142d-4bad-8efb-244a935b7b82",
              "parentUUID": "14a1e5c9-2fc6-40a5-9f9c-a50486f43831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Company Average ESS Trend : Default items should visible",
              "fullTitle": "Employee - My Dashboard Company Average ESS Trend : Default items should visible",
              "timedOut": null,
              "duration": 1906,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "678aae09-801c-4a5a-925c-e9516122eff7",
              "parentUUID": "14a1e5c9-2fc6-40a5-9f9c-a50486f43831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Company Average ESS Trend : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard Company Average ESS Trend : Check texts/labels if visible",
              "timedOut": null,
              "duration": 765,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "60aa8090-7eca-47cc-8ef0-b9cafccfa212",
              "parentUUID": "14a1e5c9-2fc6-40a5-9f9c-a50486f43831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Improve your ESS : Default items should visible",
              "fullTitle": "Employee - My Dashboard Improve your ESS : Default items should visible",
              "timedOut": null,
              "duration": 1253,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "54f9d668-2fdd-4967-a754-0139bc36a5c9",
              "parentUUID": "14a1e5c9-2fc6-40a5-9f9c-a50486f43831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Improve your ESS : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard Improve your ESS : Check texts/labels if visible",
              "timedOut": null,
              "duration": 55,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2504bf0c-6ab1-4dc6-ab5a-11476dc326f5",
              "parentUUID": "14a1e5c9-2fc6-40a5-9f9c-a50486f43831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "External Data Breaches : Default items should visible",
              "fullTitle": "Employee - My Dashboard External Data Breaches : Default items should visible",
              "timedOut": null,
              "duration": 1158,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fd984072-ad54-448e-a581-e5e3ed85de62",
              "parentUUID": "14a1e5c9-2fc6-40a5-9f9c-a50486f43831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "External Data Breaches : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard External Data Breaches : Check texts/labels if visible",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "25d2d745-88ce-4321-bd61-9d4b1d64a36c",
              "parentUUID": "14a1e5c9-2fc6-40a5-9f9c-a50486f43831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Chart Bar : Default items should visible",
              "fullTitle": "Employee - My Dashboard Chart Bar : Default items should visible",
              "timedOut": null,
              "duration": 1212,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c20582a7-5bc1-4fa0-96ff-3d54b0e2d4f7",
              "parentUUID": "14a1e5c9-2fc6-40a5-9f9c-a50486f43831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Chart Bar : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard Chart Bar : Check texts/labels if visible",
              "timedOut": null,
              "duration": 329,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "72e76799-8791-4018-8715-51a2fc2ff5b2",
              "parentUUID": "14a1e5c9-2fc6-40a5-9f9c-a50486f43831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaderboard : Default items should visible",
              "fullTitle": "Employee - My Dashboard Leaderboard : Default items should visible",
              "timedOut": null,
              "duration": 1253,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0c544b59-a816-47f8-b8bd-1f88a2c2fa2d",
              "parentUUID": "14a1e5c9-2fc6-40a5-9f9c-a50486f43831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Leaderboard : Check texts/labels if visible",
              "fullTitle": "Employee - My Dashboard Leaderboard : Check texts/labels if visible",
              "timedOut": null,
              "duration": 2855,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cc7856a7-3fea-439f-9b37-d02ebb87efee",
              "parentUUID": "14a1e5c9-2fc6-40a5-9f9c-a50486f43831",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5122521d-892c-4ab7-8704-add3e75fda57",
            "4853e6f9-142d-4bad-8efb-244a935b7b82",
            "678aae09-801c-4a5a-925c-e9516122eff7",
            "60aa8090-7eca-47cc-8ef0-b9cafccfa212",
            "54f9d668-2fdd-4967-a754-0139bc36a5c9",
            "2504bf0c-6ab1-4dc6-ab5a-11476dc326f5",
            "fd984072-ad54-448e-a581-e5e3ed85de62",
            "25d2d745-88ce-4321-bd61-9d4b1d64a36c",
            "c20582a7-5bc1-4fa0-96ff-3d54b0e2d4f7",
            "72e76799-8791-4018-8715-51a2fc2ff5b2",
            "0c544b59-a816-47f8-b8bd-1f88a2c2fa2d",
            "cc7856a7-3fea-439f-9b37-d02ebb87efee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 43576,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e0b56601-494d-4fbe-9b84-cbe705f73728",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-micro-training.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-micro-training.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "54e64af4-fbf9-4960-bfd0-a4b41f7b42c5",
          "title": "Micro Training",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Micro Training : Default items should visible",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Default items should visible",
              "timedOut": null,
              "duration": 32754,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0b6fdc1a-06cb-4a6b-b4b8-34a560e65782",
              "parentUUID": "54e64af4-fbf9-4960-bfd0-a4b41f7b42c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training : Check texts/labels if visible",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Check texts/labels if visible",
              "timedOut": null,
              "duration": 1610,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5993d002-9239-4050-8e71-2752cc75ee6d",
              "parentUUID": "54e64af4-fbf9-4960-bfd0-a4b41f7b42c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training : Validate All existing micro Trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Validate All existing micro Trainings",
              "timedOut": null,
              "duration": 29493,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "742cd8c1-bda2-4d16-9b5d-8fffea54fe12",
              "parentUUID": "54e64af4-fbf9-4960-bfd0-a4b41f7b42c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (EDGE): Validate all unsubmitted answers on micro trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training (EDGE): Validate all unsubmitted answers on micro trainings",
              "timedOut": null,
              "duration": 39277,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "26a1a9e8-856f-4a2f-9984-7d42dbe0561e",
              "parentUUID": "54e64af4-fbf9-4960-bfd0-a4b41f7b42c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (EDGE) : Validate all answered on micro trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training (EDGE) : Validate all answered on micro trainings",
              "timedOut": null,
              "duration": 46312,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "39ac79f5-216c-4ea2-bdeb-7f2b28885d42",
              "parentUUID": "54e64af4-fbf9-4960-bfd0-a4b41f7b42c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (NEGATIVE) : Validate submission button and answers on submitted trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training (NEGATIVE) : Validate submission button and answers on submitted trainings",
              "timedOut": null,
              "duration": 7468,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "bd64807a-3f7c-4fdf-8908-4c2eeac6247c",
              "parentUUID": "54e64af4-fbf9-4960-bfd0-a4b41f7b42c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training (NEGATIVE) : Validate disable submit button if no answers",
              "fullTitle": "Micro Training My Dashboard - Micro Training (NEGATIVE) : Validate disable submit button if no answers",
              "timedOut": null,
              "duration": 7182,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3d8c2faa-b849-4768-93e0-66373a0c0569",
              "parentUUID": "54e64af4-fbf9-4960-bfd0-a4b41f7b42c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Micro Training : Validate answer selections on unsubmitted micto trainings",
              "fullTitle": "Micro Training My Dashboard - Micro Training : Validate answer selections on unsubmitted micto trainings",
              "timedOut": null,
              "duration": 8271,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cb417426-21b3-4037-9d55-734e1cc76984",
              "parentUUID": "54e64af4-fbf9-4960-bfd0-a4b41f7b42c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b6fdc1a-06cb-4a6b-b4b8-34a560e65782",
            "5993d002-9239-4050-8e71-2752cc75ee6d",
            "742cd8c1-bda2-4d16-9b5d-8fffea54fe12",
            "26a1a9e8-856f-4a2f-9984-7d42dbe0561e",
            "39ac79f5-216c-4ea2-bdeb-7f2b28885d42",
            "bd64807a-3f7c-4fdf-8908-4c2eeac6247c",
            "3d8c2faa-b849-4768-93e0-66373a0c0569",
            "cb417426-21b3-4037-9d55-734e1cc76984"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 172367,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "91bdf33e-719c-46c2-ad58-e424a5206b72",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-newsletters.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-newsletters.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "90f48ab4-4363-4fdd-9a67-1d04d6029486",
          "title": "Newsletters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Newsletters : Default items should visible",
              "fullTitle": "Newsletters My Dashboard - Newsletters : Default items should visible",
              "timedOut": null,
              "duration": 39001,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cf4799f4-a136-4dd7-a43f-da7ee312b8a7",
              "parentUUID": "90f48ab4-4363-4fdd-9a67-1d04d6029486",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Newsletters : Check texts/labels if visible",
              "fullTitle": "Newsletters My Dashboard - Newsletters : Check texts/labels if visible",
              "timedOut": null,
              "duration": 35174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5e5b9c71-71bc-415b-b8f0-bcac48fffe03",
              "parentUUID": "90f48ab4-4363-4fdd-9a67-1d04d6029486",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Newsletters : Validate newsletters pdf reports",
              "fullTitle": "Newsletters My Dashboard - Newsletters : Validate newsletters pdf reports",
              "timedOut": null,
              "duration": 2679,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5f4a4763-04bd-4868-b345-b4c30f2ef557",
              "parentUUID": "90f48ab4-4363-4fdd-9a67-1d04d6029486",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cf4799f4-a136-4dd7-a43f-da7ee312b8a7",
            "5e5b9c71-71bc-415b-b8f0-bcac48fffe03",
            "5f4a4763-04bd-4868-b345-b4c30f2ef557"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 76854,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "164d9a93-191e-4c81-b13a-2bad9ecc3fa2",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-policies.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-policies.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fef0a628-3b5c-45c7-b7e8-823708c982a5",
          "title": "Policy & Procedure",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reset P & P : Default items should visible",
              "fullTitle": "Policy & Procedure Reset P & P : Default items should visible",
              "timedOut": null,
              "duration": 34316,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a7095f04-6548-4ca7-8de4-9d7bb66bf669",
              "parentUUID": "fef0a628-3b5c-45c7-b7e8-823708c982a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reset P & P : Check texts/labels if visible",
              "fullTitle": "Policy & Procedure Reset P & P : Check texts/labels if visible",
              "timedOut": null,
              "duration": 1926,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "97731e97-6949-4e3c-9af3-d833b1c75f32",
              "parentUUID": "fef0a628-3b5c-45c7-b7e8-823708c982a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies : Acknowledge All policies",
              "fullTitle": "Policy & Procedure Dashboard Policies : Acknowledge All policies",
              "timedOut": null,
              "duration": 3778,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "017d5ddc-fbeb-4148-b2f0-9a2d74680878",
              "parentUUID": "fef0a628-3b5c-45c7-b7e8-823708c982a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies : Acknowledge All other policies",
              "fullTitle": "Policy & Procedure Dashboard Policies : Acknowledge All other policies",
              "timedOut": null,
              "duration": 5069,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f75f550d-86ff-42e5-8cb2-7fa5dd3a6a10",
              "parentUUID": "fef0a628-3b5c-45c7-b7e8-823708c982a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (OOTB) : Validate API status when downloading all existing policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (OOTB) : Validate API status when downloading all existing policies",
              "timedOut": null,
              "duration": 5018,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1fd2b97d-e679-484f-9300-78c40a9ec6a2",
              "parentUUID": "fef0a628-3b5c-45c7-b7e8-823708c982a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (OOTB) : Validate API status when downloading other policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (OOTB) : Validate API status when downloading other policies",
              "timedOut": null,
              "duration": 4933,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c2c61c7d-f3bb-4717-bbe5-40efd9b36937",
              "parentUUID": "fef0a628-3b5c-45c7-b7e8-823708c982a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (NEGATIVE) : Hide created and modified date in other policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (NEGATIVE) : Hide created and modified date in other policies",
              "timedOut": null,
              "duration": 2489,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "d9d36e96-3723-401c-8a2f-f8f6e32abb62",
              "parentUUID": "fef0a628-3b5c-45c7-b7e8-823708c982a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (NEGATIVE) : Hide created and modified date in existing policies",
              "fullTitle": "Policy & Procedure Dashboard Policies (NEGATIVE) : Hide created and modified date in existing policies",
              "timedOut": null,
              "duration": 2423,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "938005fd-7699-46b2-b0b3-1668a6910df3",
              "parentUUID": "fef0a628-3b5c-45c7-b7e8-823708c982a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (EDGE) : Validate existing policies via modal",
              "fullTitle": "Policy & Procedure Dashboard Policies (EDGE) : Validate existing policies via modal",
              "timedOut": null,
              "duration": 5459,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9bf006a3-1db8-40f6-b3e4-9a2499109cf4",
              "parentUUID": "fef0a628-3b5c-45c7-b7e8-823708c982a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Dashboard Policies (EDGE) : Validate other policies via modal",
              "fullTitle": "Policy & Procedure Dashboard Policies (EDGE) : Validate other policies via modal",
              "timedOut": null,
              "duration": 5892,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a757db1f-cfad-47e4-a952-ff3dd6908feb",
              "parentUUID": "fef0a628-3b5c-45c7-b7e8-823708c982a5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7095f04-6548-4ca7-8de4-9d7bb66bf669",
            "97731e97-6949-4e3c-9af3-d833b1c75f32",
            "017d5ddc-fbeb-4148-b2f0-9a2d74680878",
            "f75f550d-86ff-42e5-8cb2-7fa5dd3a6a10",
            "1fd2b97d-e679-484f-9300-78c40a9ec6a2",
            "c2c61c7d-f3bb-4717-bbe5-40efd9b36937",
            "d9d36e96-3723-401c-8a2f-f8f6e32abb62",
            "938005fd-7699-46b2-b0b3-1668a6910df3",
            "9bf006a3-1db8-40f6-b3e4-9a2499109cf4",
            "a757db1f-cfad-47e4-a952-ff3dd6908feb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 71303,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "feb7327f-d660-488c-81ab-ad42169c4dbd",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-training.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\my-dashboard\\employee-training.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9a2fb639-e105-4161-9aad-0579ef5bbe9a",
          "title": "Training",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My Dashboard - Training : Default items should visible",
              "fullTitle": "Training My Dashboard - Training : Default items should visible",
              "timedOut": null,
              "duration": 34855,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "49b7e715-1e09-46e9-b995-fc549d2f5652",
              "parentUUID": "9a2fb639-e105-4161-9aad-0579ef5bbe9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training : Check texts/labels if visible",
              "fullTitle": "Training My Dashboard - Training : Check texts/labels if visible",
              "timedOut": null,
              "duration": 230,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "97a8eddf-2ed2-4002-befb-c67fe86bd0d8",
              "parentUUID": "9a2fb639-e105-4161-9aad-0579ef5bbe9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training : Validate Cybersecurity Training Videos",
              "fullTitle": "Training My Dashboard - Training : Validate Cybersecurity Training Videos",
              "timedOut": null,
              "duration": 27453,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dd85eb57-cf1c-4056-974b-493fe7556563",
              "parentUUID": "9a2fb639-e105-4161-9aad-0579ef5bbe9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training (EDGE) : Validate Security Quiz",
              "fullTitle": "Training My Dashboard - Training (EDGE) : Validate Security Quiz",
              "timedOut": null,
              "duration": 30123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fc680603-4d1f-4429-a9ea-a54b6528f961",
              "parentUUID": "9a2fb639-e105-4161-9aad-0579ef5bbe9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training (EDGE) : Validate Reviewing Security Quiz",
              "fullTitle": "Training My Dashboard - Training (EDGE) : Validate Reviewing Security Quiz",
              "timedOut": null,
              "duration": 3657,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "5671ade4-3f34-45e5-86f2-c747e2c74832",
              "parentUUID": "9a2fb639-e105-4161-9aad-0579ef5bbe9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training : Validate Retaking Security Quiz",
              "fullTitle": "Training My Dashboard - Training : Validate Retaking Security Quiz",
              "timedOut": null,
              "duration": 7830,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "69df4eb5-d250-44b8-ba1f-794aef8a982e",
              "parentUUID": "9a2fb639-e105-4161-9aad-0579ef5bbe9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My Dashboard - Training : Validate Step 3 - Print Your Certificate",
              "fullTitle": "Training My Dashboard - Training : Validate Step 3 - Print Your Certificate",
              "timedOut": null,
              "duration": 7951,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a4cdd120-166e-43cb-b578-cce6afc14ab5",
              "parentUUID": "9a2fb639-e105-4161-9aad-0579ef5bbe9a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "49b7e715-1e09-46e9-b995-fc549d2f5652",
            "97a8eddf-2ed2-4002-befb-c67fe86bd0d8",
            "dd85eb57-cf1c-4056-974b-493fe7556563",
            "fc680603-4d1f-4429-a9ea-a54b6528f961",
            "5671ade4-3f34-45e5-86f2-c747e2c74832",
            "69df4eb5-d250-44b8-ba1f-794aef8a982e",
            "a4cdd120-166e-43cb-b578-cce6afc14ab5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 112099,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "764e8517-04b8-445e-bef8-fae01796f3dd",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\partner-profile\\billing-report.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\partner-profile\\billing-report.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "49d6f8e0-ada7-4bbd-a7a2-bc9b4ae3030d",
          "title": "PA Billing Report",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "PA Billing Report : Default items should visible",
              "fullTitle": "PA Billing Report PA Billing Report : Default items should visible",
              "timedOut": null,
              "duration": 33403,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b712aaa0-de9b-471d-a716-ff482e831671",
              "parentUUID": "49d6f8e0-ada7-4bbd-a7a2-bc9b4ae3030d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PA Billing Report : Check texts/labels if visible",
              "fullTitle": "PA Billing Report PA Billing Report : Check texts/labels if visible",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9ef8e70e-9831-494b-83b8-3330f4bd89d6",
              "parentUUID": "49d6f8e0-ada7-4bbd-a7a2-bc9b4ae3030d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PA Billing Report (EDGE) : Validate download Billing statement",
              "fullTitle": "PA Billing Report PA Billing Report (EDGE) : Validate download Billing statement",
              "timedOut": null,
              "duration": 11646,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "98366c10-d943-4365-b9c3-4bd57c725f58",
              "parentUUID": "49d6f8e0-ada7-4bbd-a7a2-bc9b4ae3030d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PA Billing Report (EDGE) : Validate download XLS File",
              "fullTitle": "PA Billing Report PA Billing Report (EDGE) : Validate download XLS File",
              "timedOut": null,
              "duration": 11449,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "33c3d960-ade5-4027-b9af-9f6808f3d0d2",
              "parentUUID": "49d6f8e0-ada7-4bbd-a7a2-bc9b4ae3030d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b712aaa0-de9b-471d-a716-ff482e831671",
            "9ef8e70e-9831-494b-83b8-3330f4bd89d6",
            "98366c10-d943-4365-b9c3-4bd57c725f58",
            "33c3d960-ade5-4027-b9af-9f6808f3d0d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 56639,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8e88b04f-c8e7-4842-9380-ba9418cfa73c",
      "title": "",
      "fullFile": "cypress\\e2e\\internal-bpp\\employee\\contact.feature",
      "file": "cypress\\e2e\\internal-bpp\\employee\\contact.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a8076174-b6af-4a4d-9b12-1108eba4366b",
          "title": "Contact Us - Employee",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Contact Us : Default items should visible",
              "fullTitle": "Contact Us - Employee Contact Us : Default items should visible",
              "timedOut": null,
              "duration": 33462,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7d5bf79c-b471-4dbe-b868-ebb48e563827",
              "parentUUID": "a8076174-b6af-4a4d-9b12-1108eba4366b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us : Check texts/labels if visible",
              "fullTitle": "Contact Us - Employee Contact Us : Check texts/labels if visible",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "eb6ea12f-b4b1-47ae-a44c-88a7c11aba0d",
              "parentUUID": "a8076174-b6af-4a4d-9b12-1108eba4366b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us : Validate cancel submission",
              "fullTitle": "Contact Us - Employee Contact Us : Validate cancel submission",
              "timedOut": null,
              "duration": 1741,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f0538b8f-1063-43ed-ac5a-2affb7f3ab43",
              "parentUUID": "a8076174-b6af-4a4d-9b12-1108eba4366b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Contact Us (EDGE) : Validate contact-us submission",
              "fullTitle": "Contact Us - Employee Contact Us (EDGE) : Validate contact-us submission",
              "timedOut": null,
              "duration": 5392,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c0fbf0c1-c01c-4d7f-9034-a68b8e357688",
              "parentUUID": "a8076174-b6af-4a4d-9b12-1108eba4366b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d5bf79c-b471-4dbe-b868-ebb48e563827",
            "eb6ea12f-b4b1-47ae-a44c-88a7c11aba0d",
            "f0538b8f-1063-43ed-ac5a-2affb7f3ab43",
            "c0fbf0c1-c01c-4d7f-9034-a68b8e357688"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 40728,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}